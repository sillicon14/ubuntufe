{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rohit\\\\Desktop\\\\intern\\\\Sushmita - Final3\\\\frontend\\\\src\\\\components\\\\CheckoutForm\\\\AddressForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { InputLabel, Select, MenuItem, Button, Grid, Typography } from '@material-ui/core';\nimport { useForm, FormProvider } from 'react-hook-form';\nimport { Link } from 'react-router-dom'; //import { commerce } from '../../lib/commerce';\n//import FormInput from './CustomTextField'; \n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AddressForm = ({\n  next\n}) => {\n  _s();\n\n  const {\n    handleSubmit,\n    register\n  } = useForm();\n\n  const onSubmit = (data, e) => {\n    console.log(data.firstName);\n    console.log(data.lastName);\n    next();\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      gutterBottom: true,\n      children: \"Shipping address\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"First name:\", /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"firstName\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Last name:\", /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"lastName\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Address line:\", /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"address1\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Email:\", /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"email\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"City:\", /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"city\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Zip / Postal code:\", /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"zip\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'space-between'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          component: Link,\n          variant: \"outlined\",\n          to: \"/cart\",\n          children: \"Back to Cart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"contained\",\n          color: \"primary\",\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 12\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(AddressForm, \"f5MwZahoW6ccVmse2kYMfsu6aIo=\", false, function () {\n  return [useForm];\n});\n\n_c = AddressForm;\nexport default AddressForm;\n{\n  /* <Typography variant=\"h6\" gutterBottom>Shipping address</Typography>\r\n     <FormProvider {...methods}>\r\n       <form onSubmit={methods.handleSubmit((data) => test({ ...data, shippingCountry, shippingSubdivision, shippingOption }))}>\r\n         <Grid container spacing={3}>\r\n           <FormInput required name=\"firstName\" label=\"First name\" />\r\n           <FormInput required name=\"lastName\" label=\"Last name\" />\r\n           <FormInput required name=\"address1\" label=\"Address line 1\" />\r\n           <FormInput required name=\"email\" label=\"Email\" />\r\n           <FormInput required name=\"city\" label=\"City\" />\r\n           <FormInput required name=\"zip\" label=\"Zip / Postal code\" />\r\n           <Grid item xs={12} sm={6}>\r\n             <InputLabel>Shipping Country</InputLabel>\r\n             <Select value={shippingCountry} fullWidth onChange={(e) => setShippingCountry(e.target.value)}>\r\n               {Object.entries(shippingCountries).map(([code, name]) => ({ id: code, label: name })).map((item) => (\r\n                 <MenuItem key={item.id} value={item.id}>\r\n                   {item.label}\r\n                 </MenuItem>\r\n               ))}\r\n             </Select>\r\n           </Grid>\r\n           <Grid item xs={12} sm={6}>\r\n             <InputLabel>Shipping Subdivision</InputLabel>\r\n             <Select value={shippingSubdivision} fullWidth onChange={(e) => setShippingSubdivision(e.target.value)}>\r\n               {Object.entries(shippingSubdivisions).map(([code, name]) => ({ id: code, label: name })).map((item) => (\r\n                 <MenuItem key={item.id} value={item.id}>\r\n                   {item.label}\r\n                 </MenuItem>\r\n              ))}\r\n              </Select>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <InputLabel>Shipping Options</InputLabel>\r\n              <Select value={shippingOption} fullWidth onChange={(e) => setShippingOption(e.target.value)}>\r\n                {shippingOptions.map((sO) => ({ id: sO.id, label: `${sO.description} - (${sO.price.formatted_with_symbol})` })).map((item) => (\r\n                  <MenuItem key={item.id} value={item.id}>\r\n                    {item.label}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </Grid>\r\n          </Grid>\r\n          <br />\r\n          <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n            <Button component={Link} variant=\"outlined\" to=\"/cart\">Back to Cart</Button>\r\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\">Next</Button>\r\n          </div>\r\n        </form>\r\n      </FormProvider> */\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"AddressForm\");","map":{"version":3,"sources":["C:/Users/rohit/Desktop/intern/Sushmita - Final3/frontend/src/components/CheckoutForm/AddressForm.js"],"names":["React","useState","useEffect","InputLabel","Select","MenuItem","Button","Grid","Typography","useForm","FormProvider","Link","AddressForm","next","handleSubmit","register","onSubmit","data","e","console","log","firstName","lastName","display","justifyContent"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { InputLabel, Select, MenuItem, Button, Grid, Typography } from '@material-ui/core';\r\nimport { useForm, FormProvider } from 'react-hook-form';\r\nimport { Link } from 'react-router-dom';\r\n\r\n//import { commerce } from '../../lib/commerce';\r\n//import FormInput from './CustomTextField'; \r\n\r\nconst AddressForm = ({next}) => {\r\n  const {handleSubmit, register} = useForm();\r\n\r\n  const onSubmit = (data, e) => {console.log(data.firstName)\r\n  console.log(data.lastName)\r\n  next();\r\n};\r\n \r\n\r\n\r\nreturn (\r\n  <>\r\n    <Typography variant=\"h6\" gutterBottom>Shipping address</Typography>\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        <Grid container spacing={3}>\r\n        <label>First name:\r\n          <input {...register(\"firstName\")} />\r\n        </label>\r\n        <label>Last name:\r\n          <input {...register(\"lastName\")} />\r\n        </label>\r\n        <label>Address line:\r\n          <input {...register(\"address1\")} />\r\n        </label>\r\n        <label>Email:\r\n          <input {...register(\"email\")} />\r\n        </label>\r\n        <label>City:\r\n          <input {...register(\"city\")} />\r\n        </label>\r\n        <label>Zip / Postal code:\r\n          <input {...register(\"zip\")} />\r\n        </label>     \r\n        </Grid>\r\n        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n           <Button component={Link} variant=\"outlined\" to=\"/cart\">Back to Cart</Button>\r\n           <Button type=\"submit\" variant=\"contained\" color=\"primary\">Next</Button>\r\n         </div>\r\n    </form>\r\n    \r\n   </>\r\n );\r\n};\r\n\r\nexport default AddressForm;\r\n\r\n{/* <Typography variant=\"h6\" gutterBottom>Shipping address</Typography>\r\n    <FormProvider {...methods}>\r\n      <form onSubmit={methods.handleSubmit((data) => test({ ...data, shippingCountry, shippingSubdivision, shippingOption }))}>\r\n        <Grid container spacing={3}>\r\n          <FormInput required name=\"firstName\" label=\"First name\" />\r\n          <FormInput required name=\"lastName\" label=\"Last name\" />\r\n          <FormInput required name=\"address1\" label=\"Address line 1\" />\r\n          <FormInput required name=\"email\" label=\"Email\" />\r\n          <FormInput required name=\"city\" label=\"City\" />\r\n          <FormInput required name=\"zip\" label=\"Zip / Postal code\" />\r\n          <Grid item xs={12} sm={6}>\r\n            <InputLabel>Shipping Country</InputLabel>\r\n            <Select value={shippingCountry} fullWidth onChange={(e) => setShippingCountry(e.target.value)}>\r\n              {Object.entries(shippingCountries).map(([code, name]) => ({ id: code, label: name })).map((item) => (\r\n                <MenuItem key={item.id} value={item.id}>\r\n                  {item.label}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </Grid>\r\n          <Grid item xs={12} sm={6}>\r\n            <InputLabel>Shipping Subdivision</InputLabel>\r\n            <Select value={shippingSubdivision} fullWidth onChange={(e) => setShippingSubdivision(e.target.value)}>\r\n              {Object.entries(shippingSubdivisions).map(([code, name]) => ({ id: code, label: name })).map((item) => (\r\n                <MenuItem key={item.id} value={item.id}>\r\n                  {item.label}\r\n                </MenuItem>\r\n             ))}\r\n             </Select>\r\n           </Grid>\r\n           <Grid item xs={12} sm={6}>\r\n             <InputLabel>Shipping Options</InputLabel>\r\n             <Select value={shippingOption} fullWidth onChange={(e) => setShippingOption(e.target.value)}>\r\n               {shippingOptions.map((sO) => ({ id: sO.id, label: `${sO.description} - (${sO.price.formatted_with_symbol})` })).map((item) => (\r\n                 <MenuItem key={item.id} value={item.id}>\r\n                   {item.label}\r\n                 </MenuItem>\r\n               ))}\r\n             </Select>\r\n           </Grid>\r\n         </Grid>\r\n         <br />\r\n         <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n           <Button component={Link} variant=\"outlined\" to=\"/cart\">Back to Cart</Button>\r\n           <Button type=\"submit\" variant=\"contained\" color=\"primary\">Next</Button>\r\n         </div>\r\n       </form>\r\n     </FormProvider> */}"]},"metadata":{},"sourceType":"module"}