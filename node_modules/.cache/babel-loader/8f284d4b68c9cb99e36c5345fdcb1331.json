{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rohit\\\\Desktop\\\\intern\\\\Sushmita - Final3\\\\frontend\\\\src\\\\screens\\\\RegisterScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { register } from \"../actions/userActions\";\nimport us from \"../userStore\";\nimport \"./Register.css\";\nimport AfterRegister from \"./AfterRegister\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction RegisterScreen(props) {\n  _s();\n\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [Vpassword, setVpassword] = useState(\"\");\n  const [isAdmin, setAdmin] = useState(true); //const [rePassword, setRePassword] = useState('');\n\n  const userRegister = useSelector(state => state.userRegister); //reads a value from the store state this takes the current state as an argument and returns whatever data we want from it.\n\n  const {\n    userInfo\n  } = userRegister;\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (userInfo) {\n      props.history.push(\"/afterRegister\"); //If user registred then redirect to verification page\n    }\n\n    return () => {};\n  }, [userInfo]); //Only re-run the effect if userInfo changes\n\n  const submitHandler = e => {\n    e.preventDefault();\n    dispatch(register(name, email, password, Vpassword, isAdmin)); //dispatch an action to trigger a state change(register).\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"form-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"h3-color\",\n            children: [\"Sign-up\", /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fa\",\n              children: \"\\uF007\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 22\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"name\",\n            name: \"name\",\n            id: \"name\",\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            name: \"email\",\n            id: \"email\",\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"password\",\n            name: \"password\",\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"Vpassword\",\n            children: \"Re-Enter the Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"Vpassword\",\n            name: \"Vpassword\",\n            onChange: e => setVpassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"button primary\",\n            children: \"Sign-up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Already have an account?\", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"/signin\",\n            className: \"button secondary text-center\",\n            children: \"abc\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              color: \"red\"\n            },\n            children: us.getregMes()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_s(RegisterScreen, \"VoGAwayyF3Yblf7y5BS+UrjSOJ8=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = RegisterScreen;\nexport default RegisterScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterScreen\");","map":{"version":3,"sources":["C:/Users/rohit/Desktop/intern/Sushmita - Final3/frontend/src/screens/RegisterScreen.js"],"names":["React","useEffect","useState","useDispatch","useSelector","Link","register","us","AfterRegister","RegisterScreen","props","name","setName","email","setEmail","password","setPassword","Vpassword","setVpassword","isAdmin","setAdmin","userRegister","state","userInfo","dispatch","history","push","submitHandler","e","preventDefault","target","value","color","getregMes"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { register } from \"../actions/userActions\";\r\nimport us from \"../userStore\";\r\nimport \"./Register.css\";\r\nimport AfterRegister from \"./AfterRegister\";\r\n\r\nfunction RegisterScreen(props) {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [Vpassword, setVpassword] = useState(\"\");\r\n  const [isAdmin, setAdmin] = useState(true);\r\n  //const [rePassword, setRePassword] = useState('');\r\n  const userRegister = useSelector((state) => state.userRegister); //reads a value from the store state this takes the current state as an argument and returns whatever data we want from it.\r\n  const { userInfo } = userRegister;\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      props.history.push(\"/afterRegister\"); //If user registred then redirect to verification page\r\n    }\r\n    return () => {};\r\n  }, [userInfo]); //Only re-run the effect if userInfo changes\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(register(name, email, password, Vpassword, isAdmin)); //dispatch an action to trigger a state change(register).\r\n  };\r\n\r\n  return (\r\n    <div className=\"form\">\r\n      <form onSubmit={submitHandler}>\r\n        <ul className=\"form-container\">\r\n          <li>\r\n            <h3 className=\"h3-color\">\r\n              Sign-up<i className=\"fa\">&#xf007;</i>\r\n            </h3>\r\n          </li>\r\n          <li>\r\n            <label htmlFor=\"name\">Name</label>\r\n            <input\r\n              type=\"name\"\r\n              name=\"name\"\r\n              id=\"name\"\r\n              onChange={(e) => setName(e.target.value)}\r\n            ></input>\r\n          </li>\r\n          <li>\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input\r\n              type=\"email\"\r\n              name=\"email\"\r\n              id=\"email\"\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            ></input>\r\n          </li>\r\n          <li>\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"password\"\r\n              name=\"password\"\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            ></input>\r\n          </li>\r\n          <li>\r\n            <label htmlFor=\"Vpassword\">Re-Enter the Password</label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"Vpassword\"\r\n              name=\"Vpassword\"\r\n              onChange={(e) => setVpassword(e.target.value)}\r\n            ></input>\r\n          </li>\r\n          <li>\r\n            <button type=\"submit\" className=\"button primary\">\r\n              Sign-up\r\n            </button>\r\n          </li>\r\n          <li>\r\n            Already have an account?\r\n            <a href=\"/signin\" className=\"button secondary text-center\">\r\n              abc\r\n            </a>\r\n          </li>\r\n          <li>\r\n            <p style={{ color: \"red\" }}>{us.getregMes()}</p>\r\n          </li>\r\n        </ul>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\nexport default RegisterScreen;\r\n"]},"metadata":{},"sourceType":"module"}