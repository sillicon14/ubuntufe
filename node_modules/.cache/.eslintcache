[{"C:\\Users\\rohit\\Desktop\\intern\\Sushmita - Final3\\frontend\\src\\index.js":"1","C:\\Users\\rohit\\Desktop\\intern\\Sushmita - Final3\\frontend\\src\\App.js":"2","C:\\Users\\rohit\\Desktop\\intern\\Sushmita - Final3\\frontend\\src\\store.js":"3","C:\\Users\\rohit\\Desktop\\intern\\Sushmita - Final3\\frontend\\src\\myCode.js":"4","C:\\Users\\rohit\\Desktop\\intern\\Sushmita - Final3\\frontend\\src\\reducers\\productReducers.js":"5","C:\\Users\\rohit\\Desktop\\intern\\Sushmita - Final3\\frontend\\src\\reducers\\cartReducers.js":"6","C:\\Users\\rohit\\Desktop\\intern\\Sushmita - Final3\\frontend\\src\\reducers\\cartReducer2.js":"7","C:\\Users\\rohit\\Desktop\\intern\\Sushmita - Final3\\frontend\\src\\reducers\\userReducers.js":"8","C:\\Users\\rohit\\Desktop\\intern\\Sushmita - Final3\\frontend\\src\\adminCode\\Admin.js":"9","C:\\Users\\rohit\\Desktop\\intern\\Sushmita - Final3\\frontend\\src\\screens\\HomeScreen.js":"10","C:\\Users\\rohit\\Desktop\\intern\\Sushmita - Final3\\frontend\\src\\screens\\ProductScreen.js":"11","C:\\Users\\rohit\\Desktop\\intern\\Sushmita - Final3\\frontend\\src\\screens\\RegisterScreen.js":"12","C:\\Users\\rohit\\Desktop\\intern\\Sushmita - Final3\\frontend\\src\\screens\\SigninScreen.js":"13","C:\\Users\\rohit\\Desktop\\intern\\Sushmita - Final3\\frontend\\src\\screens\\NavBar.js":"14","C:\\Users\\rohit\\Desktop\\intern\\Sushmita - Final3\\frontend\\src\\screens\\AfterRegister.js":"15","C:\\Users\\rohit\\Desktop\\intern\\Sushmita - Final3\\frontend\\src\\footer\\footer.js":"16","C:\\Users\\rohit\\Desktop\\intern\\Sushmita - Final3\\frontend\\src\\screens\\CartScreen.js":"17","C:\\Users\\rohit\\Desktop\\intern\\Sushmita - Final3\\frontend\\src\\screens\\ThankYou.js":"18","C:\\Users\\rohit\\Desktop\\intern\\Sushmita - Final3\\frontend\\src\\constants\\cartConstants.js":"19","C:\\Users\\rohit\\Desktop\\intern\\Sushmita - Final3\\frontend\\src\\constants\\productConstants.js":"20","C:\\Users\\rohit\\Desktop\\intern\\Sushmita - Final3\\frontend\\src\\constants\\userConstants.js":"21","C:\\Users\\rohit\\Desktop\\intern\\Sushmita - Final3\\frontend\\src\\adminCode\\components\\packedOrders.js":"22","C:\\Users\\rohit\\Desktop\\intern\\Sushmita - Final3\\frontend\\src\\adminCode\\components\\orderDetails.js":"23","C:\\Users\\rohit\\Desktop\\intern\\Sushmita - Final3\\frontend\\src\\adminCode\\header\\nav.js":"24","C:\\Users\\rohit\\Desktop\\intern\\Sushmita - Final3\\frontend\\src\\adminCode\\components\\newOrders.js":"25","C:\\Users\\rohit\\Desktop\\intern\\Sushmita - Final3\\frontend\\src\\adminCode\\components\\delveredOrders.js":"26","C:\\Users\\rohit\\Desktop\\intern\\Sushmita - Final3\\frontend\\src\\adminCode\\components\\canceledOrders.js":"27","C:\\Users\\rohit\\Desktop\\intern\\Sushmita - Final3\\frontend\\src\\adminCode\\components\\addItems.js":"28","C:\\Users\\rohit\\Desktop\\intern\\Sushmita - Final3\\frontend\\src\\components\\CheckoutForm\\Checkout\\Checkout.js":"29","C:\\Users\\rohit\\Desktop\\intern\\Sushmita - Final3\\frontend\\src\\screens\\ImageSlider.js":"30","C:\\Users\\rohit\\Desktop\\intern\\Sushmita - Final3\\frontend\\src\\screens\\Rating.js":"31","C:\\Users\\rohit\\Desktop\\intern\\Sushmita - Final3\\frontend\\src\\userStore.js":"32","C:\\Users\\rohit\\Desktop\\intern\\Sushmita - Final3\\frontend\\src\\actions\\cartActions.js":"33","C:\\Users\\rohit\\Desktop\\intern\\Sushmita - Final3\\frontend\\src\\actions\\userActions.js":"34","C:\\Users\\rohit\\Desktop\\intern\\Sushmita - Final3\\frontend\\src\\actions\\productActions.js":"35","C:\\Users\\rohit\\Desktop\\intern\\Sushmita - Final3\\frontend\\src\\adminCode\\components\\orderList.js":"36","C:\\Users\\rohit\\Desktop\\intern\\Sushmita - Final3\\frontend\\src\\adminCode\\components\\formInput.js":"37","C:\\Users\\rohit\\Desktop\\intern\\Sushmita - Final3\\frontend\\src\\components\\CheckoutForm\\PaymentForm.js":"38","C:\\Users\\rohit\\Desktop\\intern\\Sushmita - Final3\\frontend\\src\\components\\CheckoutForm\\AddressForm.js":"39","C:\\Users\\rohit\\Desktop\\intern\\Sushmita - Final3\\frontend\\src\\components\\CheckoutForm\\Checkout\\styles.js":"40","C:\\Users\\rohit\\Desktop\\intern\\Sushmita - Final3\\frontend\\src\\components\\CheckoutForm\\Review.js":"41","C:\\Users\\rohit\\Desktop\\intern\\Sushmita - Final3\\frontend\\src\\data.js":"42"},{"size":574,"mtime":1624357950287,"results":"43","hashOfConfig":"44"},{"size":236,"mtime":1624357877041,"results":"45","hashOfConfig":"44"},{"size":1123,"mtime":1623508092000,"results":"46","hashOfConfig":"44"},{"size":1979,"mtime":1624357774705,"results":"47","hashOfConfig":"44"},{"size":1196,"mtime":1622813486000,"results":"48","hashOfConfig":"44"},{"size":1560,"mtime":1623564756000,"results":"49","hashOfConfig":"44"},{"size":768,"mtime":1623508504000,"results":"50","hashOfConfig":"44"},{"size":1442,"mtime":1622813458000,"results":"51","hashOfConfig":"44"},{"size":1420,"mtime":1624350406238,"results":"52","hashOfConfig":"44"},{"size":1971,"mtime":1624095442000,"results":"53","hashOfConfig":"44"},{"size":5491,"mtime":1624098796000,"results":"54","hashOfConfig":"44"},{"size":3209,"mtime":1624352075140,"results":"55","hashOfConfig":"44"},{"size":4590,"mtime":1624357934948,"results":"56","hashOfConfig":"44"},{"size":3907,"mtime":1624179828000,"results":"57","hashOfConfig":"44"},{"size":652,"mtime":1624102262000,"results":"58","hashOfConfig":"44"},{"size":3042,"mtime":1623584504000,"results":"59","hashOfConfig":"44"},{"size":12281,"mtime":1624099826000,"results":"60","hashOfConfig":"44"},{"size":422,"mtime":1623915576000,"results":"61","hashOfConfig":"44"},{"size":306,"mtime":1623507744000,"results":"62","hashOfConfig":"44"},{"size":370,"mtime":1620903022000,"results":"63","hashOfConfig":"44"},{"size":524,"mtime":1621869976000,"results":"64","hashOfConfig":"44"},{"size":800,"mtime":1624350691089,"results":"65","hashOfConfig":"44"},{"size":3607,"mtime":1624350691089,"results":"66","hashOfConfig":"44"},{"size":2308,"mtime":1624359542617,"results":"67","hashOfConfig":"44"},{"size":801,"mtime":1624350691099,"results":"68","hashOfConfig":"44"},{"size":808,"mtime":1624350691104,"results":"69","hashOfConfig":"44"},{"size":711,"mtime":1624350691098,"results":"70","hashOfConfig":"44"},{"size":2397,"mtime":1624102880000,"results":"71","hashOfConfig":"44"},{"size":3979,"mtime":1622791600000,"results":"72","hashOfConfig":"44"},{"size":1582,"mtime":1623919866000,"results":"73","hashOfConfig":"44"},{"size":1484,"mtime":1623577772000,"results":"74","hashOfConfig":"44"},{"size":779,"mtime":1624355782359,"results":"75","hashOfConfig":"44"},{"size":6406,"mtime":1623592350000,"results":"76","hashOfConfig":"44"},{"size":3023,"mtime":1624358191764,"results":"77","hashOfConfig":"44"},{"size":1085,"mtime":1623742290000,"results":"78","hashOfConfig":"44"},{"size":2233,"mtime":1624350691099,"results":"79","hashOfConfig":"44"},{"size":528,"mtime":1623759972000,"results":"80","hashOfConfig":"44"},{"size":5271,"mtime":1623072916000,"results":"81","hashOfConfig":"44"},{"size":4185,"mtime":1622735162000,"results":"82","hashOfConfig":"44"},{"size":1208,"mtime":1622213564000,"results":"83","hashOfConfig":"44"},{"size":1828,"mtime":1622361468000,"results":"84","hashOfConfig":"44"},{"size":2216,"mtime":1622648356000,"results":"85","hashOfConfig":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"av3xel",{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"90"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"90"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"90"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"90"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"90"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"90"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"90"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"90"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"90"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"90"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"90"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"90"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"90"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"90"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"90"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"90"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"90"},"C:\\Users\\rohit\\Desktop\\intern\\Sushmita - Final3\\frontend\\src\\index.js",[],"C:\\Users\\rohit\\Desktop\\intern\\Sushmita - Final3\\frontend\\src\\App.js",[],["188","189"],"C:\\Users\\rohit\\Desktop\\intern\\Sushmita - Final3\\frontend\\src\\store.js",[],"C:\\Users\\rohit\\Desktop\\intern\\Sushmita - Final3\\frontend\\src\\myCode.js",["190","191","192"],"import React, { useEffect, useState } from \"react\";\r\nimport \"./App.css\";\r\nimport { Route } from \"react-router-dom\";\r\nimport HomeScreen from \"./screens/HomeScreen\";\r\nimport ProductScreen from \"./screens/ProductScreen\";\r\nimport CartScreen from \"./screens/CartScreen\";\r\nimport SigninScreen from \"./screens/SigninScreen\";\r\nimport RegisterScreen from \"./screens/RegisterScreen\";\r\nimport AfterRegister from \"./screens/AfterRegister\";\r\nimport ThankYou from \"./screens/ThankYou\";\r\nimport Footer from \"./footer/footer\";\r\nimport Checkout from \"./components/CheckoutForm/Checkout/Checkout\";\r\nimport NavBar from \"./screens/NavBar\";\r\nimport us from \"./userStore\";\r\nimport Admin from \"./adminCode/Admin\";\r\nimport { set } from \"js-cookie\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst UserInterface = () => {\r\n  const [isAdmin, setAdmin] = useState();\r\n  const userSignin = useSelector((state) => state.userSignin);\r\n  const { userInfo } = userSignin;\r\n  useEffect(() => {\r\n    if (userInfo) setAdmin(userInfo.isAdmin);\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      {console.log(isAdmin)}\r\n      {isAdmin && <Admin />}\r\n      {!isAdmin && (\r\n        <div className=\"grid-container\">\r\n          <NavBar />\r\n\r\n          <main className=\"main\">\r\n            <div className=\"content\">\r\n              <Route path=\"/signin\" component={SigninScreen} />\r\n              <Route path=\"/register\" component={RegisterScreen} />\r\n              <Route path=\"/product/:id\" component={ProductScreen} />\r\n              <Route path=\"/cart/:id?\" component={CartScreen} />\r\n              <Route path=\"/afterRegister\" component={AfterRegister} />\r\n              <Route path=\"/thankYou\" component={ThankYou} />\r\n              <Route path=\"/checkout\">\r\n                <Checkout />\r\n              </Route>\r\n              <Route path=\"/\" exact={true} component={HomeScreen} />\r\n            </div>\r\n          </main>\r\n          <Footer />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default UserInterface;\r\n","C:\\Users\\rohit\\Desktop\\intern\\Sushmita - Final3\\frontend\\src\\reducers\\productReducers.js",[],"C:\\Users\\rohit\\Desktop\\intern\\Sushmita - Final3\\frontend\\src\\reducers\\cartReducers.js",[],"C:\\Users\\rohit\\Desktop\\intern\\Sushmita - Final3\\frontend\\src\\reducers\\cartReducer2.js",[],"C:\\Users\\rohit\\Desktop\\intern\\Sushmita - Final3\\frontend\\src\\reducers\\userReducers.js",[],"C:\\Users\\rohit\\Desktop\\intern\\Sushmita - Final3\\frontend\\src\\adminCode\\Admin.js",[],"C:\\Users\\rohit\\Desktop\\intern\\Sushmita - Final3\\frontend\\src\\screens\\HomeScreen.js",["193","194"],"\r\nimport React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { listProducts } from '../actions/productActions';\r\nimport ImageSlider from './ImageSlider';\r\nimport './Home.css'\r\nimport Rating from './Rating';\r\n\r\nfunction HomeScreen(props) {\r\n  const productList = useSelector(state => state.productList);\r\n  const { products, loading, error } = productList;\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(listProducts()); //dispatch an action to trigger a state change(List of Products).\r\n    return () => { };\r\n  }, []) //An empty array []: the side-effect runs once after the initial rendering.\r\n\r\n  return (\r\n    loading ? <div>Loading...</div> :\r\n      error ? <div>{error}</div> :\r\n        <div>\r\n          <div>\r\n\r\n         \r\n            <ul className=\"products\">\r\n              {\r\n\r\n                products.map(product =>\r\n\r\n                  <li key={product._id}>\r\n                    <div className=\"product\">\r\n                      <div className=\"product-name\">\r\n                        <Link to={'/product/' + product._id}>{product.name}</Link>\r\n                      </div>\r\n                      <Link to={'/product/' + product._id}>\r\n                        <div className=\"inner\">\r\n                          <img className=\"product-image\" src={product.image} alt=\"product\" />\r\n                        </div>\r\n                      </Link>\r\n\r\n                      <div className=\"product-price\">₹{product.price}</div>\r\n                      <div className=\"rating\">\r\n                        <Rating \r\n                        rating={product.rating} \r\n                        numReviews={product.numReviews}>\r\n                        </Rating>\r\n                      </div>\r\n\r\n                    </div>\r\n                  </li>)\r\n              }\r\n            </ul>\r\n          </div>\r\n\r\n        </div>\r\n  )\r\n}\r\n\r\nexport default HomeScreen;","C:\\Users\\rohit\\Desktop\\intern\\Sushmita - Final3\\frontend\\src\\screens\\ProductScreen.js",["195","196","197","198"],"import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { detailsProduct } from '../actions/productActions';\r\nimport { addToCart } from '../actions/cartActions';\r\nimport './Product.css';\r\nimport Rating from './Rating';\r\n\r\nfunction ProductScreen(props) {\r\n\r\n    const [qty, setQty] = useState(1);\r\n    const productDetails = useSelector(state => state.productDetails); //reads a value from the store state this takes the current state as an argument and returns whatever data we want from it.\r\n    const { product, loading, error } = productDetails;\r\n    const dispatch = useDispatch();\r\n    const userSignin = useSelector(state => state.userSignin);\r\n    const { userInfo } = userSignin;\r\n\r\n    useEffect(() => {\r\n        dispatch(detailsProduct(props.match.params.id)); //dispatch an action to trigger a state change(Product details).\r\n        return () => { };\r\n    }, []);\r\n\r\n\r\n    const handleAddToCart = (e) => {\r\n\r\n        console.log(\" handle add to cart\", props.match.params.id);\r\n        //console.log(\"userInfo isAdmin\",userInfo.isAdmin);\r\n        if (props.match.params.id) {\r\n            dispatch(addToCart(props.match.params.id, qty)); //dispatch an action to trigger a state change(Add to cart).\r\n            //popup\r\n            var x = document.getElementById(\"snackbar\");\r\n            x.className = \"show\";\r\n            setTimeout(function () { x.className = x.className.replace(\"show\", \"\"); }, 2000);\r\n            //popup-end\r\n        }\r\n        //props.history.push(\"/cart/\" + props.match.params.id + \"?qty=\" + qty)  //redirect to cartScreen\r\n    }\r\n    const handleAddToCartSignIn = (e) => {\r\n        props.history.push(\"/signin\"); //If the user is not sign-in and his/her is trying to add to cart then it will redirect to sign-in page\r\n    }\r\n\r\n    return <div>\r\n        {\r\n            loading ? <div>Loading...</div> :\r\n                error ? <div>{error} </div> :\r\n                    (\r\n                        <div className=\"details\">\r\n                            <div className=\"details-image\">\r\n                                <img src={product.image} alt=\"product\"></img>\r\n                            </div>\r\n                            <div className=\"details-info\">\r\n                                <ul>\r\n                                    <li>\r\n                                        <h4 className=\"pname\"> <b> {product.name} </b> </h4>\r\n                                    </li>\r\n                                    <li>\r\n                                        <b>Category: </b>{product.category}\r\n                                    </li>\r\n\r\n                                    <li>\r\n                                        <b>Price: </b> ₹{product.price}\r\n                                    </li>\r\n                                    <li>\r\n                                        <Rating\r\n                                            rating={product.rating}\r\n                                            numReviews= {product.numReviews}>\r\n                                        </Rating>\r\n                                    </li>\r\n                                    <li>\r\n                                        <b>Description: </b>\r\n                                        <div>\r\n                                            <p> {product.description} </p>\r\n                                        </div>\r\n                                    </li>\r\n                                </ul>\r\n                            </div>\r\n                            <div className=\"details-action\">\r\n                                <ul>\r\n                                    <li>\r\n                                        <div><b>Status:</b> \r\n                                            {product.countInStock > 5 ? \r\n                                            <span className=\"success\"> In stock</span>\r\n                                              : \r\n                                            product.countInStock > 0 ? \r\n                                            <span className=\"fail\"> Hurry!! Few left.</span> :\r\n                                            <span className=\"fail\"> Unavailable.</span>\r\n                                             }\r\n                                                </div>\r\n                                    </li>\r\n                                    <li>\r\n                                        <b>Qty:</b> <select value={qty} onChange={(e) => setQty(e.target.value)}>\r\n                                            {[...Array(product.countInStock).keys()].map(x =>\r\n                                                <option key={x + 1} value={x + 1}>{x + 1}</option>\r\n                                            )}\r\n                                        </select>\r\n                                    </li>\r\n                                    <li>\r\n                                        <div id=\"snackbar\">Added to cart.</div>\r\n                                        {product.countInStock > 0 &&\r\n                                            <button onClick={ (e) => handleAddToCart(e)} className=\"button primary\" >Add to Cart</button>\r\n                                        }\r\n                                    </li>\r\n                                </ul>\r\n\r\n                            </div>\r\n                        </div>\r\n                    )\r\n        }\r\n    </div>\r\n}\r\n\r\nexport default ProductScreen;","C:\\Users\\rohit\\Desktop\\intern\\Sushmita - Final3\\frontend\\src\\screens\\RegisterScreen.js",["199","200","201"],"import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { register } from \"../actions/userActions\";\r\nimport us from \"../userStore\";\r\nimport \"./Register.css\";\r\nimport AfterRegister from \"./AfterRegister\";\r\n\r\nfunction RegisterScreen(props) {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [Vpassword, setVpassword] = useState(\"\");\r\n  const [isAdmin, setAdmin] = useState(true);\r\n  //const [rePassword, setRePassword] = useState('');\r\n  const userRegister = useSelector((state) => state.userRegister); //reads a value from the store state this takes the current state as an argument and returns whatever data we want from it.\r\n  const { userInfo } = userRegister;\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      props.history.push(\"/afterRegister\"); //If user registred then redirect to verification page\r\n    }\r\n    return () => {};\r\n  }, [userInfo]); //Only re-run the effect if userInfo changes\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(register(name, email, password, Vpassword, isAdmin)); //dispatch an action to trigger a state change(register).\r\n  };\r\n\r\n  return (\r\n    <div className=\"form\">\r\n      <form onSubmit={submitHandler}>\r\n        <ul className=\"form-container\">\r\n          <li>\r\n            <h3 className=\"h3-color\">\r\n              Sign-up<i className=\"fa\">&#xf007;</i>\r\n            </h3>\r\n          </li>\r\n          <li>\r\n            <label htmlFor=\"name\">Name</label>\r\n            <input\r\n              type=\"name\"\r\n              name=\"name\"\r\n              id=\"name\"\r\n              onChange={(e) => setName(e.target.value)}\r\n            ></input>\r\n          </li>\r\n          <li>\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input\r\n              type=\"email\"\r\n              name=\"email\"\r\n              id=\"email\"\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            ></input>\r\n          </li>\r\n          <li>\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"password\"\r\n              name=\"password\"\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            ></input>\r\n          </li>\r\n          <li>\r\n            <label htmlFor=\"Vpassword\">Re-Enter the Password</label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"Vpassword\"\r\n              name=\"Vpassword\"\r\n              onChange={(e) => setVpassword(e.target.value)}\r\n            ></input>\r\n          </li>\r\n          <li>\r\n            <button type=\"submit\" className=\"button primary\">\r\n              Sign-up\r\n            </button>\r\n          </li>\r\n          <li>\r\n            Already have an account?\r\n            <Link to=\"/signin\" className=\"button secondary text-center\">\r\n              Login\r\n            </Link>\r\n          </li>\r\n          <li>\r\n            <p style={{ color: \"red\" }}>{us.getregMes()}</p>\r\n          </li>\r\n        </ul>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\nexport default RegisterScreen;\r\n","C:\\Users\\rohit\\Desktop\\intern\\Sushmita - Final3\\frontend\\src\\screens\\SigninScreen.js",["202","203"],"C:\\Users\\rohit\\Desktop\\intern\\Sushmita - Final3\\frontend\\src\\screens\\NavBar.js",["204","205"],"import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport logo from './logo.png';\r\nimport './NavBar.css';\r\nimport Cookie from \"js-cookie\";\r\nimport axios from \"axios\";\r\n\r\nfunction NavBar() {\r\n\r\n  const userSignin = useSelector(state => state.userSignin);\r\n  const { userInfo } = userSignin;\r\n\r\n  const [isLogout,setLogout] = useState(false);\r\n\r\n  const cart = useSelector(state => state.cart);\r\n  const { cartItems } = cart;\r\n  //Cart count\r\n  var count = 0;\r\n  for (const item in cartItems) {\r\n    count = parseInt(count) + parseInt(cartItems[item].qty);\r\n  }\r\n  //Cart count end\r\n\r\n  //Cookie count\r\n  const cart2 = useSelector(state => state.cart2);\r\n  const { cartItems2 } = cart2;\r\n  var ccount = 0;\r\n  for (const item2 in cartItems2) {\r\n    ccount = parseInt(ccount) + parseInt(cartItems2[item2].qty);\r\n  }\r\n  //Cookie count end\r\n\r\n  const logoutHandler = async () => {\r\n    Cookie.remove('userInfo');\r\n    Cookie.remove('cartItems');\r\n    await axios.get(`/api/users/logout`);\r\n    setLogout(true);\r\n  // window.open\r\n  //location.navigate\r\n    \r\n  }\r\n\r\n  \r\n  return (\r\n\r\n    <div>\r\n\r\n      <header className=\"header\">\r\n        <div className=\"brand\">\r\n          <Link to=\"/\">Home</Link>\r\n        </div>\r\n\r\n        <div>\r\n          <div className=\"dropdown\">\r\n            <button className=\"dropbtn\">Categories &#9776;</button>\r\n            <div className=\"dropdown-content\">\r\n              <Link to=\"/\">Drone Parts</Link>\r\n              <Link to=\"/\">Drone Kits</Link>\r\n              <Link to=\"/\">Robotic Kits</Link>\r\n              <Link to=\"/\">Sensor Kits</Link>\r\n              <Link to=\"/\">Arduino Compatible Kits</Link>\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n\r\n\r\n\r\n        <div className=\"header-links\">\r\n          <Link to=\"/cart\">Cart<i className=\"fa\">&#xf07a;</i>\r\n\r\n            <span class='badge badge-warning' id='lblCartCount'>\r\n              {\r\n                userInfo ? count : ccount\r\n              } </span>\r\n          </Link>\r\n          {\r\n            userInfo ?\r\n              <span>\r\n                <Link to=\"/\"> {userInfo.name}<i className=\"fa\">&#xf007;</i> </Link>\r\n                <a onClick={logoutHandler} href=\"/\">Logout</a>\r\n              </span>\r\n              :\r\n              <Link to=\"/signin\">Login</Link>\r\n              \r\n          }\r\n        </div>\r\n      </header>\r\n\r\n\r\n\r\n    </div>\r\n\r\n  );\r\n}\r\nexport default NavBar;\r\n\r\n/*\r\nimport React from 'react';\r\nimport { BrowserRouter, Link } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport logo from './logo.png';\r\n\r\nfunction NavBar() {\r\n\r\n  const userSignin = useSelector(state => state.userSignin);\r\n  const { userInfo } = userSignin;\r\n\r\n  return (\r\n\r\n    <div>\r\n      <div>\r\n        <img className=\"header__logo\" src={logo} alt=\"logo\" />\r\n        <div className=\"dropdown\">\r\n          <button className=\"dropbtn\">Categories &#9776;</button>\r\n          <div className=\"dropdown-content\">\r\n            <Link to=\"/\">Drone Parts</Link>\r\n            <Link to=\"/\">Drone Kits</Link>\r\n            <Link to=\"/\">Robotic Kits</Link>\r\n            <Link to=\"/\">Sensor Kits</Link>\r\n            <Link to=\"/\">Arduino Compatible Kits</Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <header className=\"header\">\r\n        <div className=\"brand\">\r\n          <i class=\"fa fa-home homeIcon\" ></i> <Link to=\"/\">Home</Link>\r\n        </div>\r\n\r\n        <div>\r\n        </div>\r\n        <div className=\"header-links\">\r\n          <Link to=\"/cart\">Cart</Link>\r\n          {\r\n            userInfo ?\r\n              <span>\r\n                <Link to=\"/profile\"> {userInfo.name} </Link>\r\n                <Link to=\"/logout\">Logout</Link>\r\n              </span>\r\n              :\r\n              <Link to=\"/signin\">Login</Link>\r\n          }\r\n        </div>\r\n      </header>\r\n    </div>\r\n\r\n  );\r\n}\r\nexport default NavBar;\r\n*/","C:\\Users\\rohit\\Desktop\\intern\\Sushmita - Final3\\frontend\\src\\screens\\AfterRegister.js",[],"C:\\Users\\rohit\\Desktop\\intern\\Sushmita - Final3\\frontend\\src\\footer\\footer.js",["206","207","208","209","210","211","212","213","214","215"],"import React from 'react'\nimport \"./footer.css\"\nimport {Container} from \"react-bootstrap\"\n\n\nexport default function Footer(){\n\n    \n    return(\n      \n        <div>\n        <footer className=\"footer-width\">\n            <div className=\"footer-top\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-3 col-sm-6 col-xs-12 segment-one\">\n                            <h3 className=\"h2-h3-color\">Divinector</h3>\n                            <p>Lorem Ipsum is simply dummy text of the printing and \n                                typesetting industry. Lorem Ipsum has been the industry's \n                                standard dummy text ever since the 1500s, when an unknown \n                                printer took a galley of type and scrambled it to \n                                make a type specimen book.</p>\n                        </div>\n\n                        <div className=\"col-md-3 col-sm-6 col-xs-12 segment-two\">\n                                    <h2 className=\"h2-h3-color\">USEFUL LINKS</h2>\n                                    <ul>\n                                        <li><a href=\"#\">Event</a></li>\n                                        <li><a href=\"#\">About</a></li>\n                                        <li><a href=\"#\">Contact</a></li>\n                                        <li><a href=\"#\">Support</a></li>\n                                        <li><a href=\"#\">Blogs</a></li>\n                                    </ul>\n                        </div>\n\n                        <div className=\"col-md-3 col-sm-6 col-xs-12 segment-three\">\n                            <h2 className=\"h2-h3-color\">Follow Us</h2>\n                            <p>Lorem Ipsum is simply dummy text of the printing and \n                                typesetting industry. Lorem Ipsum has been the industry's \n                                standard dummy text ever since the 1500s, when an unknown \n                                printer took a galley of type and scrambled it to \n                                make a type specimen book.</p>\n                            <a href=\"#\"><i className=\"fa fa-facebook size\"></i></a>\n                            <a href=\"#\"><i className=\"fa fa-twitter size\"></i></a>\n                            <a href=\"#\"><i className=\"fa fa-linkedin size\"></i></a>\n                            <a href=\"#\"><i className=\"fa fa-pinterest size\"></i></a>\n                        </div>\n\n                <div className=\"col-md-3 col-sm-6 col-xs-12 segment-four\">\n                    <h2 className=\"h2-h3-color\">Our Newletter</h2>\n                    <p>Lorem Ipsum is simply dummy text of the printing and \n                        typesetting industry. Lorem Ipsum has been the industry's \n                        standard dummy </p>\n                        \n                </div>\n                    \n                </div>\n            </div>\n            </div>\n        </footer>\n        </div>\n       \n    )\n\n       \n\n\n}","C:\\Users\\rohit\\Desktop\\intern\\Sushmita - Final3\\frontend\\src\\screens\\CartScreen.js",["216","217","218","219"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { addToCart, removeFromCart, getCartItems,updateCart } from '../actions/cartActions';\r\nimport './Cart.css';\r\nimport Axios from \"axios\";\r\nimport Rating from './Rating';\r\n\r\nfunction CartScreen(props) {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const userSignin = useSelector(state => state.userSignin);\r\n    const { userInfo } = userSignin;\r\n\r\n    const cart = useSelector(state => state.cart);\r\n    const { cartItems, isCartItemsLOaded } = cart;\r\n\r\n    const cart2 = useSelector(state => state.cart2);\r\n    const { cartItems2 } = cart2;\r\n\r\n    if (userInfo) {\r\n\r\n       \r\n        // const [ttqty,setTtqty] = useState(0);\r\n        //Total calculation\r\n        var total = 0, tqty = 0;\r\n        for (const item in cartItems) {\r\n            total = total + cartItems[item].price * cartItems[item].qty;\r\n            tqty = parseInt(tqty) + parseInt(cartItems[item].qty);\r\n        }\r\n        console.log(total);\r\n        //Total calculation end\r\n       \r\n        if (!isCartItemsLOaded) {\r\n            dispatch(getCartItems()); //If CartItems are not LOaded then get the cartitems.\r\n        }\r\n\r\n        const removeFromCartHandler = (productId,itemId) => {\r\n            if(itemId){\r\n           // console.log(\"removeFromCartHandler\",productId);\r\n            dispatch(removeFromCart(itemId)); //dispatch an action to trigger a state change(Remove item from cart).\r\n            //popup\r\n            var x = document.getElementById(\"snackbar\");\r\n            x.className = \"show\";\r\n            setTimeout(function () { x.className = x.className.replace(\"show\", \"\"); }, 2000);\r\n            //popup-end\r\n            }\r\n            else{\r\n                Axios.get(\"/api/products/\" + productId).then(response => {\r\n                    dispatch(removeFromCart(response._id));\r\n                });\r\n                \r\n            }\r\n            console.log(\"removeFromCartHandler\",productId);\r\n        }\r\n\r\n        const updateCartHandler = (updateId,updateQty) => {\r\n            console.log(\"updateCartHandler id\",updateId);\r\n            console.log(\"updateCartHandler qty\",updateQty);\r\n            dispatch(updateCart(updateId,updateQty));\r\n        }\r\n       \r\n        const checkoutHandler = () => {\r\n            props.history.push(\"/checkout\");\r\n        }\r\n\r\n        return <div className=\"cart\">\r\n            <div className=\"cart-list\">\r\n                <ul className=\"cart-list-container\">\r\n                    <li>\r\n                        <h3>\r\n                            Shopping Cart\r\n                        </h3>\r\n                        <div style={{fontSize: \"18px\" }}>\r\n                            Price\r\n                        </div>\r\n                    </li>\r\n\r\n                    {\r\n                        cartItems.length === 0 ?\r\n                            <div>\r\n                                Cart is empty\r\n                            </div>\r\n                            :\r\n                            cartItems.map(item =>\r\n                                <li>\r\n\r\n                                    <div className=\"cart-image\">\r\n                                        <img src={item.image} alt=\"product\" />\r\n                                    </div>\r\n                                    <div className=\"cart-name\">\r\n                                        <div>\r\n                                            <Link to={\"/product/\" + item.product}>\r\n                                                <b>{item.name}</b>\r\n                                            </Link>\r\n                                        </div>\r\n                                        <div>\r\n                                            <Rating\r\n                                                rating={item.rating}\r\n                                                numReviews={item.numReviews}>\r\n                                            </Rating>\r\n                                        </div>\r\n                                        <div>\r\n                                        ₹{item.price}\r\n                                        </div>\r\n                                        <div>\r\n                                            {item.countInStock > 5 ?\r\n                                                <p style={{ color: \"green\", fontSize: \"15px\" }}>In stock</p> :\r\n                                                <p style={{ color: \"red\", fontSize: \"15px\" }}>Hurry!! Few left.</p>\r\n                                            }\r\n                                        </div>\r\n                                        <div>\r\n                                            Qty:\r\n                                            <select value={item.qty} onChange={(e) => updateCartHandler(item._id, e.target.value)}>\r\n                                                {[...Array(item.countInStock).keys()].map(x =>\r\n                                                    <option key={x + 1} value={x + 1}>{x + 1}</option>\r\n                                                )}\r\n                                            </select>\r\n                                            <div id=\"snackbar\">Deleted from cart.</div>\r\n                                            <button type=\"button\" className=\"del-but\" onClick={() => removeFromCartHandler(item.product,item._id)} >\r\n                                                Delete\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"cart-price\">\r\n                                        ₹{item.price * item.qty}\r\n                                    </div>\r\n\r\n                                </li>\r\n\r\n                            )\r\n                    }\r\n                    <div className=\"cart-Subtotal\">\r\n                        <p>\r\n                            Subtotal ({tqty} items)\r\n                            :\r\n                            <b>₹{total}</b>\r\n                        </p>\r\n                    </div>\r\n                </ul>\r\n            </div>\r\n\r\n            <div className=\"cart-action\">\r\n\r\n                <h3>\r\n\r\n                    Subtotal ({tqty} items)\r\n                    :\r\n                    <b>₹{total}</b>\r\n\r\n                </h3>\r\n                <button onClick={checkoutHandler} className=\"button primary full-width\" disabled={cartItems.length === 0}>\r\n                    Proceed to Checkout\r\n                </button>\r\n            </div>\r\n        </div>\r\n        //reduce((previousScore, currentScore, index)=>previousScore+currentScore, 0);\r\n    }\r\n    /* inside cart action\r\n      <div className=\"cart-action-Free\"> \r\n              {\r\n                    total >= 500 ?\r\n                    <i class=\"fa fa-check-circle\">Your order is eligible for FREE Delivery.</i> :\r\n                    cartItems.length > 0 && <p> FREE Delivery on orders over ₹500.</p> \r\n                }\r\n                </div>*/\r\n\r\n    if (!userInfo) {\r\n       \r\n        //Total calculation\r\n        var total = 0, tqty = 0;\r\n        for (const item2 in cartItems2) {\r\n            total = total + cartItems2[item2].price * cartItems2[item2].qty;\r\n            tqty = parseInt(tqty) + parseInt(cartItems2[item2].qty);\r\n        }\r\n        console.log(total);\r\n        //Total calculation end\r\n\r\n        const removeFromCartHandler = (productId2) => {\r\n            dispatch(removeFromCart(productId2)); //dispatch an action to trigger a state change(Remove item from cart).\r\n            //popup\r\n            var x = document.getElementById(\"snackbar\");\r\n            x.className = \"show\";\r\n            setTimeout(function () { x.className = x.className.replace(\"show\", \"\"); }, 2000);\r\n            //popup-end\r\n        }\r\n      \r\n        const checkoutHandler = () => {\r\n            props.history.push(\"/checkout\");\r\n        }\r\n\r\n        return <div className=\"cart\">\r\n            <div className=\"cart-list\">\r\n                <ul className=\"cart-list-container\">\r\n                    <li>\r\n                        <h3>\r\n                            Shopping Cart\r\n                        </h3>\r\n                        <div style={{fontSize: \"18px\" }}>\r\n                            Price\r\n                        </div>\r\n                    </li>\r\n\r\n                    {\r\n                        cartItems2.length === 0 ?\r\n                            <div>\r\n                                Cart is empty\r\n                            </div>\r\n                            :\r\n                            cartItems2.map(item2 =>\r\n                                <li>\r\n\r\n                                    <div className=\"cart-image\">\r\n                                        <img src={item2.image} alt=\"product\" />\r\n                                    </div>\r\n                                    <div className=\"cart-name\">\r\n                                        <div>\r\n                                            <Link to={\"/product/\" + item2.product}>\r\n                                                <b>{item2.name}</b>\r\n                                            </Link>\r\n                                        </div>\r\n                                        <div>\r\n                                            <Rating\r\n                                                rating={item2.rating}\r\n                                                numReviews={item2.numReviews}>\r\n                                            </Rating>\r\n                                        </div>\r\n                                        <div>\r\n                                        ₹{item2.price}\r\n                                        </div>\r\n                                        <div>\r\n                                            {item2.countInStock > 5 ?\r\n                                                <p style={{ color: \"green\", fontSize: \"15px\" }}>In stock</p> :\r\n                                                <p style={{ color: \"red\", fontSize: \"15px\" }}>Hurry!! Few left.</p>\r\n                                            }\r\n                                        </div>\r\n                                        <div>\r\n                                            Qty:\r\n                                            <select value={item2.qty} onChange={(e) => dispatch(addToCart(item2.product, e.target.value))}>\r\n                                                {[...Array(item2.countInStock).keys()].map(x =>\r\n                                                    <option key={x + 1} value={x + 1}>{x + 1}</option>\r\n                                                )}\r\n                                            </select>\r\n                                            <div id=\"snackbar\">Deleted from cart.</div>\r\n                                            <button type=\"button\" className=\"del-but\" onClick={() => removeFromCartHandler(item2.product)} >\r\n                                                Delete\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"cart-price\">\r\n                                        ₹{item2.price * item2.qty}\r\n                                    </div>\r\n\r\n                                </li>\r\n\r\n                            )\r\n                    }\r\n                    <div className=\"cart-Subtotal\">\r\n                        <p>\r\n                            Subtotal ({tqty} items)\r\n                            :\r\n                            <b>₹{total}</b>\r\n                        </p>\r\n                    </div>\r\n                </ul>\r\n            </div>\r\n\r\n            <div className=\"cart-action\">\r\n\r\n                <h3>\r\n                Subtotal ({tqty} items)\r\n                            :\r\n                            <b>₹{total}</b>\r\n\r\n                </h3>\r\n                <button onClick={checkoutHandler} className=\"button primary full-width\" disabled={cartItems.length === 0}>\r\n                    Proceed to Checkout\r\n                </button>\r\n            </div>\r\n        </div>\r\n    }\r\n\r\n}\r\nexport default CartScreen;","C:\\Users\\rohit\\Desktop\\intern\\Sushmita - Final3\\frontend\\src\\screens\\ThankYou.js",["220"],"import { Link } from 'react-router-dom';\r\nimport React from 'react';\r\nimport './ThankYou.css';\r\n\r\nexport default function ThankYou(props) {\r\n\r\n    return(\r\n     <div>\r\n<form>\r\n  <div className=\"container1\">\r\n  <i class=\"fa fa-check-circle pass\"> </i>\r\n    <h1>Thank You!!</h1>\r\n    <hr></hr>\r\n    <p style={{fontSize: \"16px\" }}>Your account has been successfully registered.</p>\r\n  </div>  \r\n</form>\r\n</div>   \r\n    )\r\n}\r\n","C:\\Users\\rohit\\Desktop\\intern\\Sushmita - Final3\\frontend\\src\\constants\\cartConstants.js",[],"C:\\Users\\rohit\\Desktop\\intern\\Sushmita - Final3\\frontend\\src\\constants\\productConstants.js",[],"C:\\Users\\rohit\\Desktop\\intern\\Sushmita - Final3\\frontend\\src\\constants\\userConstants.js",[],"C:\\Users\\rohit\\Desktop\\intern\\Sushmita - Final3\\frontend\\src\\adminCode\\components\\packedOrders.js",[],"C:\\Users\\rohit\\Desktop\\intern\\Sushmita - Final3\\frontend\\src\\adminCode\\components\\orderDetails.js",["221","222","223","224","225"],"import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nconst Details = (props) => {\r\n  const [link, setlink] = useState(\"\");\r\n  const [edit, setedit] = useState(false);\r\n  const [order, setOrder] = useState([]);\r\n  const [orderItems, setItems] = useState([]);\r\n  const [address, setAddress] = useState([]);\r\n  const [renderCause, setRenderCause] = useState(true);\r\n  useEffect(() => {\r\n    axios\r\n      .get(\r\n        `http://localhost:5000/api/orders/rohith/1223/${props.match.params.id}`\r\n        //`http://localhost:3000/api/orders/rohith/1223/60bd17ad0a1a7f2a785a6006`\r\n      )\r\n      .then((response) => {\r\n        setOrder(response.data);\r\n        setItems(response.data.orderItems);\r\n        setAddress(response.data.shippingAddress);\r\n      });\r\n  }, [renderCause]);\r\n\r\n  const submitHandle = async (evt) => {\r\n    evt.preventDefault();\r\n    await axios\r\n      .put(`http://localhost:5000/api/orders/trackingLink/${order._id}/${link}`)\r\n      .then((response) => {\r\n        console.log(response);\r\n        setedit(!edit);\r\n        setRenderCause(!renderCause);\r\n      });\r\n  };\r\n  return (\r\n    <div style={{ background: \"black\", color: \"white\" }}>\r\n      <h4>Order id: {props.match.params.id}</h4>\r\n      <div>placed by:</div>\r\n      <div\r\n        className=\"orderList\"\r\n        style={{\r\n          background: \"rgb(239, 236, 241)\",\r\n          maxWidth: \"50%\",\r\n          margin: \"2% 0%\",\r\n          color: \"black\",\r\n        }}\r\n      >\r\n        <center style={{ fontWeight: \"700\", textAlign: \"center\" }}>\r\n          Orderd products list\r\n        </center>\r\n        {orderItems.map((item) => {\r\n          return (\r\n            <div style={{ borderBottom: \"2px solid black\" }}>\r\n              <span style={{ display: \"list-item\" }}>\r\n                Product Name:{\" \"}\r\n                <span style={{ fontWeight: \"900\" }}>{item.name}</span>\r\n              </span>\r\n              <span style={{ display: \"list-item\" }}>\r\n                qty: <span style={{ fontWeight: \"900\" }}>{item.qty}</span>\r\n              </span>\r\n              <span style={{ display: \"list-item\" }}>\r\n                price: <span style={{ fountWeight: \"900\" }}>{item.price}</span>\r\n              </span>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n      <div>status of order : {order.orderStatus}</div>\r\n      <div>transaction id:{order.transactionId}</div>\r\n      <div>Shipping Adress:{address.address}</div>\r\n      <div>City:{address.city}</div>\r\n      <div>Postal Code:{address.postalCode}</div>\r\n      <div>Billing Adress:</div>\r\n      {order.trackingLink && (\r\n        <div>\r\n          tracking link : {order.trackingLink || \"none\"}\r\n          <button\r\n            onClick={() => setedit(!edit)}\r\n            hidden={\r\n              order.orderStatus == \"delvered\" || order.orderStatus == \"canceled\"\r\n                ? true\r\n                : false\r\n            }\r\n          >\r\n            Edit\r\n          </button>\r\n        </div>\r\n      )}\r\n      {order.orderStatus != \"ordered\" &&\r\n        !order.orderStatus == \"canceled\" &&\r\n        (!order.trackingLink || edit) && (\r\n          <form onSubmit={(evt) => submitHandle(evt)}>\r\n            <label htmlFor=\"trackingLink\">Add a tracking link:</label>\r\n            <input\r\n              id=\"trackingLink\"\r\n              type=\"text\"\r\n              onChange={(evt) => setlink([evt.target.value])}\r\n              value={link}\r\n            />\r\n            <button type=\"submit\" style={{ padding: \"4px\" }}>\r\n              submit\r\n            </button>\r\n          </form>\r\n        )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Details;\r\n","C:\\Users\\rohit\\Desktop\\intern\\Sushmita - Final3\\frontend\\src\\adminCode\\header\\nav.js",["226"],"C:\\Users\\rohit\\Desktop\\intern\\Sushmita - Final3\\frontend\\src\\adminCode\\components\\newOrders.js",[],"C:\\Users\\rohit\\Desktop\\intern\\Sushmita - Final3\\frontend\\src\\adminCode\\components\\delveredOrders.js",[],"C:\\Users\\rohit\\Desktop\\intern\\Sushmita - Final3\\frontend\\src\\adminCode\\components\\canceledOrders.js",["227"],"import React, { useEffect, useState } from \"react\";\r\nimport \"./orderList.css\";\r\nimport axios from \"axios\";\r\nimport OrderList from \"./orderList\";\r\nconst CancelledOrder = (props) => {\r\n  var list;\r\n  const [Order, setOrder] = useState([]);\r\n  const [statusChange, setStatusChange] = useState(true);\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"http://localhost:5000/api/orders/orders/canceled\")\r\n      .then((response) => {\r\n        setOrder(response.data);\r\n      });\r\n  }, [statusChange]);\r\n  list = Order.map((a) => <OrderList {...props} {...a} />);\r\n  return (\r\n    <div>\r\n      <div></div>\r\n      <div></div>\r\n      {list}\r\n      {console.log(Order)}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CancelledOrder;\r\n","C:\\Users\\rohit\\Desktop\\intern\\Sushmita - Final3\\frontend\\src\\adminCode\\components\\addItems.js",[],"C:\\Users\\rohit\\Desktop\\intern\\Sushmita - Final3\\frontend\\src\\components\\CheckoutForm\\Checkout\\Checkout.js",["228","229","230","231","232","233"],"import React, { useState, useEffect, useContext } from 'react';\r\nimport { CssBaseline, Paper, Stepper, Step, StepLabel, Typography, CircularProgress, Divider, Button } from '@material-ui/core';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport us from '../../../userStore';\r\n\r\n//import { commerce } from '../../../lib/commerce';\r\nimport AddressForm from '../AddressForm';\r\nimport PaymentForm from '../PaymentForm';\r\nimport useStyles from './styles';\r\n\r\nconst steps = ['Shipping address', 'Payment details'];\r\n//const Checkout = (cart) => {\r\nconst Checkout = ({ dataFromParent}) => {\r\n  console.log(us.getCartId());\r\n // const [checkoutToken, setCheckoutToken] = useState(null);\r\n  const [activeStep, setActiveStep] = useState(0);\r\n  const [shippingData, setShippingData] = useState({});\r\n  const classes = useStyles();\r\n//  const history = useHistory();\r\n\r\n const nextStep = () => setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n  const backStep = () => setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n /* \r\n  useEffect(() => {\r\n    if (cart.id) {\r\n      const generateToken = async () => {\r\n        try {\r\n          const token = await commerce.checkout.generateToken(cart.id, { type: 'cart' });\r\n\r\n          setCheckoutToken(token);\r\n        } catch {\r\n          if (activeStep !== steps.length) history.push('/');\r\n        }\r\n      };\r\n\r\n      generateToken();\r\n    }\r\n  }, [cart]);\r\n*/\r\n // const next = (data) => {\r\n   // setShippingData(data);\r\n//console.log(data);\r\n  //  nextStep();\r\n // };\r\n/*\r\n  let Confirmation = () => (order.customer ? (\r\n    <>\r\n      <div>\r\n        <Typography variant=\"h5\">Thank you for your purchase, {order.customer.firstname} {order.customer.lastname}!</Typography>\r\n        <Divider className={classes.divider} />\r\n        <Typography variant=\"subtitle2\">Order ref: {order.customer_reference}</Typography>\r\n      </div>\r\n      <br />\r\n      <Button component={Link} variant=\"outlined\" type=\"button\" to=\"/\">Back to home</Button>\r\n    </>\r\n  ) : (\r\n    <div className={classes.spinner}>\r\n      <CircularProgress />\r\n    </div>\r\n  ));\r\n\r\n  if (error) {\r\n    Confirmation = () =>  (\r\n      <>\r\n        <Typography variant=\"h5\">Error: {error}</Typography>\r\n        <br />\r\n        <Button component={Link} variant=\"outlined\" type=\"button\" to=\"/\">Back to home</Button>\r\n      </>\r\n    );\r\n  } */\r\n\r\n  const Confirmation = () => (\r\n    <>\r\n    <div>\r\n      <Typography variant=\"h5\">Thank you for your purchase, firstname lastname!</Typography>\r\n      <Divider className={classes.divider} />\r\n      <Typography variant=\"subtitle2\">Order ref: customer_reference</Typography>\r\n    </div>\r\n    <br />\r\n    <Button component={Link} variant=\"outlined\" type=\"button\" to=\"/\">Back to home</Button>\r\n  </>\r\n  );\r\n\r\n/* \r\n  <>\r\n      <div>\r\n        <Typography variant=\"h5\">Thank you for your purchase, {order.customer.firstname} {order.customer.lastname}!</Typography>\r\n        <Divider className={classes.divider} />\r\n        <Typography variant=\"subtitle2\">Order ref: {order.customer_reference}</Typography>\r\n      </div>\r\n      <br />\r\n      <Button component={Link} variant=\"outlined\" type=\"button\" to=\"/\">Back to home</Button>\r\n    </> */\r\n\r\n  const Form = () => (activeStep === 0\r\n    ? <AddressForm next={nextStep}/>\r\n    : <PaymentForm backStep={backStep} next={nextStep}/>);\r\n\r\n  return (\r\n    <>\r\n      <CssBaseline/>\r\n      <div className={classes.toolbar} />\r\n      <main className={classes.layout}>\r\n        <Paper className={classes.paper}>\r\n          <Typography variant=\"h4\" align=\"center\">Checkout</Typography>\r\n          <Stepper activeStep={activeStep} className={classes.stepper}>\r\n            {steps.map((label) => (\r\n              <Step key={label}>\r\n                <StepLabel>{label}</StepLabel>\r\n              </Step>\r\n            ))}\r\n          </Stepper>\r\n          {activeStep === steps.length ? <Confirmation /> : <Form />}\r\n        </Paper>\r\n      </main>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Checkout;","C:\\Users\\rohit\\Desktop\\intern\\Sushmita - Final3\\frontend\\src\\screens\\ImageSlider.js",[],"C:\\Users\\rohit\\Desktop\\intern\\Sushmita - Final3\\frontend\\src\\screens\\Rating.js",[],"C:\\Users\\rohit\\Desktop\\intern\\Sushmita - Final3\\frontend\\src\\userStore.js",[],"C:\\Users\\rohit\\Desktop\\intern\\Sushmita - Final3\\frontend\\src\\actions\\cartActions.js",["234"],"import Axios from \"axios\";\r\nimport Cookie from \"js-cookie\";\r\nimport { CART_ADD_ITEM, CART_REMOVE_ITEM, SET_CART_ITEMS, CART_UPDATE_ITEM, CART_ADD_ITEM2, CART_REMOVE_ITEM2 } from \"../constants/cartConstants\";\r\n\r\nconst addToCart = (productId, qty) => async (dispatch, getState) => {\r\n    const userInfo = Cookie.get('userInfo');\r\n    if (userInfo) {\r\n        try {\r\n            const { data } = await Axios.get(\"/api/products/\" + productId);\r\n            console.log(\"Data \", data);\r\n            const { cart: { cartItems } } = getState();\r\n\r\n            console.log(\"Cart Item before\", cartItems);\r\n           let productFound = false;\r\n                cartItems.map(item => {\r\n                    if (item.product === productId) {\r\n                       // console.log(\"Product found\", item);\r\n                       //item.qty = parseInt(item.qty) + parseInt(qty);\r\n                       dispatch(updateCart(item._id,parseInt(item.qty) + parseInt(qty)));\r\n                       productFound = true;\r\n                    }\r\n                    return item;\r\n                }\r\n                )\r\n           if(productFound){\r\n               return;\r\n           }\r\n\r\n            dispatch({\r\n                type: CART_ADD_ITEM, payload: {\r\n                    product: data._id,\r\n                    name: data.name,\r\n                    image: data.image,\r\n                    price: data.price,\r\n                    countInStock: data.countInStock,\r\n                    rating: data.rating,\r\n                    numReviews: data.numReviews,\r\n                    qty\r\n                }\r\n            });\r\n            const item = [{\r\n                product: data._id,\r\n                name: data.name,\r\n                image: data.image,\r\n                price: data.price,\r\n                countInStock: data.countInStock,\r\n                rating: data.rating,\r\n                numReviews: data.numReviews,\r\n                qty\r\n            }]\r\n            const userInfo = Cookie.get('userInfo');\r\n            if (userInfo) {\r\n                console.log(\"User inso parse: \", JSON.parse(userInfo));\r\n                Axios.get(`/api/users/${JSON.parse(userInfo)._id}`).then(response => {\r\n                    Axios.post(`/api/carts/${response.data.cartId}/addToCart`, { \"cartItems\": item }).then(response => {\r\n                        console.log(\"Cart data\", response);\r\n                    });\r\n                });\r\n            }\r\n            else {\r\n                console.log();\r\n            }\r\n        }\r\n        catch (error) {\r\n        }\r\n    }\r\n    //Cookie\r\n    if (!userInfo) {\r\n\r\n        try {\r\n            const { data } = await Axios.get(\"/api/products/\" + productId);\r\n            dispatch({\r\n                type: CART_ADD_ITEM2, payload: {\r\n                    product: data._id,\r\n                    name: data.name,\r\n                    image: data.image,\r\n                    price: data.price,\r\n                    countInStock: data.countInStock,\r\n                    rating: data.rating,\r\n                    numReviews: data.numReviews,\r\n                    qty\r\n                }\r\n            });\r\n\r\n            const { cart2: { cartItems2 } } = getState();\r\n            Cookie.set(\"cartItems2\", JSON.stringify(cartItems2));\r\n\r\n        }\r\n        catch (error) {\r\n\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst removeFromCart = (productId) => async (dispatch, getState) => {\r\n    const userInfo = Cookie.get('userInfo');\r\n    if (userInfo) {\r\n       // dispatch({ type: CART_REMOVE_ITEM, payload: productId });\r\n\r\n\r\n        const userInfo = Cookie.get('userInfo');\r\n        if (userInfo) {\r\n            console.log(\"User inso parse: \", JSON.parse(userInfo));\r\n            Axios.get(`/api/users/${JSON.parse(userInfo)._id}`).then(response => {\r\n\r\n                Axios.delete(`/api/carts/${response.data.cartId}/${productId}`).then(response => {\r\n                    console.log(\"Romove item:\", response);\r\n                    dispatch({ type: CART_REMOVE_ITEM, payload: productId });\r\n                });\r\n            });\r\n        }\r\n        //Cookie.set(\"cartItems\", JSON.stringify(cartItems));\r\n    }\r\n    if (!userInfo) {\r\n        dispatch({ type: CART_REMOVE_ITEM2, payload: productId });\r\n\r\n        const { cart2: { cartItems2 } } = getState();\r\n        Cookie.set(\"cartItems2\", JSON.stringify(cartItems2));\r\n    }\r\n\r\n}\r\n\r\nconst getCartItems = () => async (dispatch, getState) => {\r\n\r\n\r\n    var { cart: { cartItems } } = getState();\r\n    console.log(\"Inside getCartItems\", cartItems);\r\n    const userInfo = Cookie.get('userInfo');\r\n    // to get token \r\n    // const token = Cookie.get('token');\r\n\r\n    if (userInfo) {\r\n        console.log(\"User info parse: \", JSON.parse(userInfo));\r\n        Axios.get(`/api/users/${JSON.parse(userInfo)._id}`).then(response => {\r\n\r\n            Axios.get(`/api/carts/${response.data.cartId} `).then(response => {\r\n                dispatch({ type: SET_CART_ITEMS, payload: response.data[0].cartItems });\r\n\r\n                console.log(\"Cart items:\", response.data[0].cartItems);\r\n            });\r\n        });\r\n    }\r\n\r\n    console.log(\"Before set\", cartItems);\r\n    Cookie.set(\"cartItems\", JSON.stringify(cartItems));\r\n    // const {cookie} = Cookie.get(\"cartItems\");\r\n}\r\n\r\nconst updateCart = (_id, qty) => async (dispatch, getState) => {\r\n    var { cart: { cartItems } } = getState();\r\n    try {\r\n        console.log(\"Cart Item before\", cartItems);\r\n        let updatedCart =\r\n            cartItems.map(item => {\r\n                if (item._id === _id) {\r\n                    console.log(\"Product found\", item);\r\n                    item.qty = qty;\r\n                }\r\n                return item;\r\n            }\r\n            )\r\n        console.log(\"Cart Item after\", updatedCart);\r\n        const userInfo = Cookie.get('userInfo');\r\n        if (userInfo) {\r\n            console.log(\"User inso parse: \", JSON.parse(userInfo));\r\n            Axios.get(`/api/users/${JSON.parse(userInfo)._id}`).then(response => {\r\n                Axios.put(`/api/carts/${response.data.cartId}`, { \"cartItems\": updatedCart }).then(response => {\r\n                    dispatch({ type: SET_CART_ITEMS, payload: response.data.cart.cartItems });\r\n                    console.log(\"Update data\", response.data.cart.cartItems);\r\n                });\r\n            });\r\n        }\r\n\r\n    }\r\n    catch (error) {\r\n    }\r\n}\r\n\r\nexport { addToCart, removeFromCart, getCartItems, updateCart }","C:\\Users\\rohit\\Desktop\\intern\\Sushmita - Final3\\frontend\\src\\actions\\userActions.js",[],"C:\\Users\\rohit\\Desktop\\intern\\Sushmita - Final3\\frontend\\src\\actions\\productActions.js",[],"C:\\Users\\rohit\\Desktop\\intern\\Sushmita - Final3\\frontend\\src\\adminCode\\components\\orderList.js",["235","236","237","238","239","240","241","242","243"],"import React from \"react\";\r\nimport axios from \"axios\";\r\nimport New from \"./logos/new.png\";\r\nimport Seen from \"./logos/seen.png\";\r\n\r\nfunction OrderList(props) {\r\n  const detailsHandle = () => {\r\n    props.history.push(`Detals/Orderdetails/${props._id}`);\r\n  };\r\n  const buttonHndle = async (status) => {\r\n    await axios.put(\r\n      `http://localhost:5000/api/orders/changeOrderStatus/${props._id}/${status}`\r\n    );\r\n    props.setStatusChange(!props.statusChange);\r\n  };\r\n  return (\r\n    <div>\r\n      <div className=\"admin-orderlist\">\r\n        <h4 className=\"admin-orderid\">Order Id : {props._id}</h4>\r\n        <hr />\r\n        <div className=\"admin-button-row\">\r\n          <button\r\n            className=\"admin-packed\"\r\n            hidden={\r\n              props.orderStatus == \"packed\" ||\r\n              props.orderStatus == \"canceled\" ||\r\n              props.orderStatus == \"delvered\"\r\n                ? true\r\n                : false\r\n            }\r\n            style={{ border: \"2px solid green\", color: \"green\" }}\r\n            onClick={() => buttonHndle(\"packed\")}\r\n          >\r\n            packed\r\n          </button>\r\n          <button\r\n            className=\"admin-button\"\r\n            style={{ border: \"2px solid blue\", color: \"blue\" }}\r\n            onClick={() => buttonHndle(\"delvered\")}\r\n            hidden={\r\n              props.orderStatus == \"delvered\" || props.orderStatus == \"canceled\"\r\n                ? true\r\n                : false\r\n            }\r\n          >\r\n            deleverde\r\n          </button>\r\n          <button\r\n            style={{ border: \"2px solid Black\" }}\r\n            onClick={detailsHandle}\r\n            className=\"admin-button\"\r\n          >\r\n            Details\r\n          </button>\r\n          <span className=\"admin-total-price\">\r\n            Total Price: {props.totalPrice || \"0\"}\r\n          </span>\r\n          <span className=\"admin-newStatus\">\r\n            {props.newStatus == \"new\" && (\r\n              <img src={New} style={{ maxWidth: \"30px\" }} />\r\n            )}\r\n            {props.newStatus == \"seen\" && (\r\n              <img src={Seen} style={{ maxWidth: \"30px\" }} />\r\n            )}\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default OrderList;\r\n","C:\\Users\\rohit\\Desktop\\intern\\Sushmita - Final3\\frontend\\src\\adminCode\\components\\formInput.js",[],"C:\\Users\\rohit\\Desktop\\intern\\Sushmita - Final3\\frontend\\src\\components\\CheckoutForm\\PaymentForm.js",["244","245","246"],"import React, {useState} from 'react';\r\nimport { Typography, Button, Divider, List, ListItem, ListItemText } from '@material-ui/core';\r\n//import { Elements, CardElement, ElementsConsumer } from '@stripe/react-stripe-js';\r\n//import { loadStripe } from '@stripe/stripe-js';\r\nimport Review from './Review';\r\n\r\n//const stripePromise = loadStripe(process.env.REACT_APP_STRIPE_PUBLIC_KEY);\r\n\r\nfunction loadScript(src) {\r\n\treturn new Promise((resolve) => {\r\n\t\tconst script = document.createElement('script')\r\n\t\tscript.src = src\r\n\t\tscript.onload = () => {\r\n\t\t\tresolve(true)\r\n\t\t}\r\n\t\tscript.onerror = () => {\r\n\t\t\tresolve(false)\r\n\t\t}\r\n\t\tdocument.body.appendChild(script)\r\n\t})\r\n}\r\n\r\nconst __DEV__ = document.domain === 'localhost'\r\n\r\n\r\nconst PaymentForm = ({backStep, next}) => {\r\n  const [name, setName] = useState('Meghana')\r\n\r\n  async function displayRazorPay(){\r\n    const res = await loadScript('https://checkout.razorpay.com/v1/checkout.js')\r\n\r\n    if (!res) {\r\n\t\t\talert('Razorpay SDK failed to load. Are you connected to Internet?')\r\n\t\t\treturn\r\n    }\r\n\r\n    const data =await fetch('http://localhost:5000/razorpay', {method: 'POST'}).then((t) =>\r\n      t.json()\r\n    )\r\n    console.log(data)\r\n    const options = {\r\n      \"key\":  __DEV__ ? 'rzp_test_8mtVT1x94JsEtr' : 'PRODUCTION_KEY', // Enter the Key ID generated from the Dashboard\r\n      \"amount\": data.amount.toString(), // Amount is in currency subunits. Default currency is INR. Hence, 50000 refers to 50000 paise\r\n      \"currency\": data.currency,\r\n      \"name\": \"Silicon14\",\r\n      \"description\": \"Thank you for making your payment\",\r\n      \"image\": \"http://localhost:5000/symbol.png\",\r\n      \"order_id\": data.id, //This is a sample Order ID. Pass the `id` obtained in the response of Step 1\r\n      \"handler\": function (res){\r\n          /* alert(res.razorpay_payment_id);\r\n          alert(res.razorpay_order_id);\r\n          alert(res.razorpay_signature); */\r\n          next();\r\n          /* console.log(res)\r\n          console.log(id)\r\n        axios.put(`http://localhost:3000/api/orders/${id}`, {id: res.razorpay_order_id})\r\n          .then(response => {\r\n            console.log(response)\r\n          })\r\n          .catch(error => {\r\n            console.log(error)\r\n          }) */\r\n          //axios.post(`http://localhost:3000/api/orders/:userId/`, {})\r\n          \r\n      },\r\n      \"prefill\": {\r\n         name,\r\n      },\r\n  };\r\n  const paymentObject = new window.Razorpay(options)\r\n\t\tpaymentObject.open()\r\n  } \r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const orderData={\r\n      //items\r\n\r\n    }\r\n  }\r\n\r\n/*  const handleSubmit = async (event, elements, stripe) => {\r\n    event.preventDefault();\r\n\r\n    if (!stripe || !elements) return;\r\n\r\n    const cardElement = elements.getElement(CardElement);\r\n\r\n    const { error, paymentMethod } = await stripe.createPaymentMethod({ type: 'card', card: cardElement });\r\n\r\n    if (error) {\r\n      console.log('[error]', error);\r\n    } else {\r\n      const orderData = {\r\n        line_items: checkoutToken.live.line_items,\r\n        customer: { firstname: shippingData.firstName, lastname: shippingData.lastName, email: shippingData.email },\r\n        shipping: { name: 'International', street: shippingData.address1, town_city: shippingData.city, county_state: shippingData.shippingSubdivision, postal_zip_code: shippingData.zip, country: shippingData.shippingCountry },\r\n        fulfillment: { shipping_method: shippingData.shippingOption },\r\n        payment: {\r\n          gateway: 'stripe',\r\n          stripe: {\r\n            payment_method_id: paymentMethod.id,\r\n          },\r\n        },\r\n      };\r\n\r\n      onCaptureCheckout(checkoutToken.id, orderData);\r\n\r\n      nextStep();\r\n    }\r\n  }; */\r\n  return (\r\n    <>\r\n      <Review/>\r\n      <Divider />\r\n      <Typography variant=\"h6\" gutterBottom style={{ margin: '0px 0' ,paddingTop: '10px' }}>Payment method</Typography>\r\n      <List>\r\n      <ListItem>\r\n      <ListItemText secondary={\"RazorPay\"} />\r\n      </ListItem>\r\n      </List>\r\n      <form onSubmit={(e) => handleSubmit(e)}>\r\n      <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n              <Button variant=\"outlined\" onClick={backStep}>Back</Button>\r\n              <Button type=\"submit\" variant=\"contained\"  color=\"primary\" onClick={displayRazorPay}>\r\n                Pay \r\n              </Button>\r\n      </div>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PaymentForm;\r\n\r\n\r\n{/* <Review checkoutToken={checkoutToken} />\r\n      <Divider />\r\n      <Typography variant=\"h6\" gutterBottom style={{ margin: '20px 0' }}>Payment method</Typography>\r\n      <Elements stripe={stripePromise}>\r\n        <ElementsConsumer>{({ elements, stripe }) => (\r\n          <form onSubmit={(e) => handleSubmit(e, elements, stripe)}>\r\n            <CardElement />\r\n            <br /> <br />\r\n            <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n              <Button variant=\"outlined\" onClick={backStep}>Back</Button>\r\n              <Button type=\"submit\" variant=\"contained\" disabled={!stripe} color=\"primary\">\r\n                Pay {checkoutToken.live.subtotal.formatted_with_symbol}\r\n              </Button>\r\n            </div>\r\n          </form>\r\n        )}\r\n        </ElementsConsumer>\r\n      </Elements> */}","C:\\Users\\rohit\\Desktop\\intern\\Sushmita - Final3\\frontend\\src\\components\\CheckoutForm\\AddressForm.js",["247","248","249","250","251","252","253"],"import React, { useState, useEffect } from 'react';\r\nimport { InputLabel, Select, MenuItem, Button, Grid, Typography } from '@material-ui/core';\r\nimport { useForm, FormProvider } from 'react-hook-form';\r\nimport { Link } from 'react-router-dom';\r\n\r\n//import { commerce } from '../../lib/commerce';\r\n//import FormInput from './CustomTextField'; \r\n\r\nconst AddressForm = ({next}) => {\r\n  const {handleSubmit, register} = useForm();\r\n\r\n  const onSubmit = (data, e) => {console.log(data.firstName)\r\n  console.log(data.lastName)\r\n  next();\r\n};\r\n \r\n\r\n\r\nreturn (\r\n  <>\r\n    <Typography variant=\"h6\" gutterBottom>Shipping address</Typography>\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        <Grid container spacing={3}>\r\n        <label>First name:\r\n          <input {...register(\"firstName\")} />\r\n        </label>\r\n        <label>Last name:\r\n          <input {...register(\"lastName\")} />\r\n        </label>\r\n        <label>Address line:\r\n          <input {...register(\"address1\")} />\r\n        </label>\r\n        <label>Email:\r\n          <input {...register(\"email\")} />\r\n        </label>\r\n        <label>City:\r\n          <input {...register(\"city\")} />\r\n        </label>\r\n        <label>Zip / Postal code:\r\n          <input {...register(\"zip\")} />\r\n        </label>     \r\n        </Grid>\r\n        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n           <Button component={Link} variant=\"outlined\" to=\"/cart\">Back to Cart</Button>\r\n           <Button type=\"submit\" variant=\"contained\" color=\"primary\">Next</Button>\r\n         </div>\r\n    </form>\r\n    \r\n   </>\r\n );\r\n};\r\n\r\nexport default AddressForm;\r\n\r\n{/* <Typography variant=\"h6\" gutterBottom>Shipping address</Typography>\r\n    <FormProvider {...methods}>\r\n      <form onSubmit={methods.handleSubmit((data) => test({ ...data, shippingCountry, shippingSubdivision, shippingOption }))}>\r\n        <Grid container spacing={3}>\r\n          <FormInput required name=\"firstName\" label=\"First name\" />\r\n          <FormInput required name=\"lastName\" label=\"Last name\" />\r\n          <FormInput required name=\"address1\" label=\"Address line 1\" />\r\n          <FormInput required name=\"email\" label=\"Email\" />\r\n          <FormInput required name=\"city\" label=\"City\" />\r\n          <FormInput required name=\"zip\" label=\"Zip / Postal code\" />\r\n          <Grid item xs={12} sm={6}>\r\n            <InputLabel>Shipping Country</InputLabel>\r\n            <Select value={shippingCountry} fullWidth onChange={(e) => setShippingCountry(e.target.value)}>\r\n              {Object.entries(shippingCountries).map(([code, name]) => ({ id: code, label: name })).map((item) => (\r\n                <MenuItem key={item.id} value={item.id}>\r\n                  {item.label}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </Grid>\r\n          <Grid item xs={12} sm={6}>\r\n            <InputLabel>Shipping Subdivision</InputLabel>\r\n            <Select value={shippingSubdivision} fullWidth onChange={(e) => setShippingSubdivision(e.target.value)}>\r\n              {Object.entries(shippingSubdivisions).map(([code, name]) => ({ id: code, label: name })).map((item) => (\r\n                <MenuItem key={item.id} value={item.id}>\r\n                  {item.label}\r\n                </MenuItem>\r\n             ))}\r\n             </Select>\r\n           </Grid>\r\n           <Grid item xs={12} sm={6}>\r\n             <InputLabel>Shipping Options</InputLabel>\r\n             <Select value={shippingOption} fullWidth onChange={(e) => setShippingOption(e.target.value)}>\r\n               {shippingOptions.map((sO) => ({ id: sO.id, label: `${sO.description} - (${sO.price.formatted_with_symbol})` })).map((item) => (\r\n                 <MenuItem key={item.id} value={item.id}>\r\n                   {item.label}\r\n                 </MenuItem>\r\n               ))}\r\n             </Select>\r\n           </Grid>\r\n         </Grid>\r\n         <br />\r\n         <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n           <Button component={Link} variant=\"outlined\" to=\"/cart\">Back to Cart</Button>\r\n           <Button type=\"submit\" variant=\"contained\" color=\"primary\">Next</Button>\r\n         </div>\r\n       </form>\r\n     </FormProvider> */}","C:\\Users\\rohit\\Desktop\\intern\\Sushmita - Final3\\frontend\\src\\components\\CheckoutForm\\Checkout\\styles.js",[],"C:\\Users\\rohit\\Desktop\\intern\\Sushmita - Final3\\frontend\\src\\components\\CheckoutForm\\Review.js",["254","255","256"],"import React from 'react';\r\nimport { Typography, List, ListItem, ListItemText } from '@material-ui/core';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {getCartItems} from '../../actions/cartActions';\r\nimport data from '../../data'\r\n\r\nconst Review = () => {\r\n    const cart = useSelector(state => state.cart);\r\n    const { cartItems } = cart;\r\n    console.log({cartItems});\r\n    console.log(data.products)\r\n    return(\r\n  <>\r\n    <Typography variant=\"h6\" gutterBottom>Order summary</Typography>\r\n    <List disablePadding>\r\n    {data.products.map((product) => (\r\n        <div style={{border: '0.1px solid'}}>\r\n        <ListItem style={{ padding: '10px 5px' }} key={product.name}>\r\n          <ListItemText primary={product.name} secondary={`Quantity: ${product.qty}`} />\r\n          <Typography variant=\"body2\">₹ {product.price}</Typography>\r\n        </ListItem>\r\n        </div>\r\n      ))}\r\n    </List>\r\n    \r\n  </>\r\n  )\r\n};\r\n\r\nexport default Review;\r\n\r\n/* {Object.keys(subjects).map((keyName, i) => (\r\n    <li className=\"travelcompany-input\" key={i}>\r\n        <span className=\"input-label\">key: {i} Name: {subjects[keyName]}</span>\r\n    </li>\r\n))} */\r\n\r\n{/* <List disablePadding>\r\n      {checkoutToken.live.line_items.map((product) => (\r\n        <ListItem style={{ padding: '10px 0' }} key={product.name}>\r\n          <ListItemText primary={product.name} secondary={`Quantity: ${product.quantity}`} />\r\n          <Typography variant=\"body2\">{product.line_total.formatted_with_symbol}</Typography>\r\n        </ListItem>\r\n      ))}\r\n      <ListItem style={{ padding: '10px 0' }}>\r\n        <ListItemText primary=\"Total\" />\r\n        <Typography variant=\"subtitle1\" style={{ fontWeight: 700 }}>\r\n          {checkoutToken.live.subtotal.formatted_with_symbol}\r\n        </Typography>\r\n      </ListItem>\r\n    </List> */}","C:\\Users\\rohit\\Desktop\\intern\\Sushmita - Final3\\frontend\\src\\data.js",["257"],"export default {\r\n    products: [\r\n      {\r\n        _id: '1',\r\n        name: 'Membrane-keypad',\r\n        category: 'Sensor Kits',\r\n        image: '/images/membrane-keypad.jpg',\r\n        price: 70,\r\n        brand: ' Flipkart',\r\n        rating: 4.5,\r\n        numReviews: 8,\r\n        qty: 1\r\n      },\r\n\r\n      {\r\n        _id: '2',\r\n        name: 'Raspberry Pi',\r\n        category: 'Sensor Kits',\r\n        image: '/images/RPI4-MODBP-1GB_DSL.jpg',\r\n        price: 70,\r\n        brand: ' Flipkart',\r\n        rating: 4.5,\r\n        numReviews: 8,\r\n        qty: 1\r\n      },\r\n\r\n      {\r\n        _id: '3',\r\n        name: '8051 Microcontroller Trainer',\r\n        category: 'Sensor Kits',\r\n        image: '/images/8051-microcontroller-trainer.jpg',\r\n        price: 70,\r\n        brand: ' Flipkart',\r\n        rating: 4.5,\r\n        numReviews: 8,\r\n        qty: 1\r\n      },\r\n\r\n      {\r\n        _id: '4',\r\n        name: 'Ultra sonic sensor',\r\n        category: 'Sensor Kits',\r\n        image: '/images/ultra-sonic-sensor.jpg',\r\n        price: 50,\r\n        brand: ' Flipkart',\r\n        rating: 4.2,\r\n        numReviews: 5,\r\n        qty: 1\r\n      },\r\n\r\n      {\r\n        _id: '5',\r\n        name: 'LCD Controller Board',\r\n        category: 'Sensor Kits',\r\n        image: '/images/LCD_Controller_Board.jpg',\r\n        price: 60,\r\n        brand: ' Flipkart',\r\n        rating: 4.5,\r\n        numReviews: 10,\r\n        qty: 1\r\n      },\r\n     \r\n      /* {\r\n        _id: '6',\r\n        name: 'Breadboard',\r\n        category: 'Sensor Kits',\r\n        image: '/images/Breadboard.jpg',\r\n        price: 70,\r\n        brand: ' Flipkart',\r\n        rating: 4.5,\r\n        numReviews: 8,\r\n        qty: 1\r\n      }, {\r\n        _id: '7',\r\n        name: 'Arduino Uno',\r\n        category: 'Sensor Kits',\r\n        image: '/images/d1.jpg',\r\n        price: 70,\r\n        brand: ' Flipkart',\r\n        rating: 4.5,\r\n        numReviews: 8,\r\n        qty: 1\r\n      },\r\n\r\n      \r\n      {\r\n        _id: '8',\r\n        name: 'Grond humidity sensor',\r\n        category: 'Sensor Kits',\r\n        image: '/images/Grond-humidity-sensor-module.jpg',\r\n        price: 70,\r\n        brand: ' Flipkart',\r\n        rating: 4.5,\r\n        numReviews: 8,\r\n        qty: 1\r\n      }, */\r\n    ]\r\n  }",{"ruleId":"258","replacedBy":"259"},{"ruleId":"260","replacedBy":"261"},{"ruleId":"262","severity":1,"message":"263","line":14,"column":8,"nodeType":"264","messageId":"265","endLine":14,"endColumn":10},{"ruleId":"262","severity":1,"message":"266","line":16,"column":10,"nodeType":"264","messageId":"265","endLine":16,"endColumn":13},{"ruleId":"267","severity":1,"message":"268","line":23,"column":3,"nodeType":"264","endLine":23,"endColumn":12,"suggestions":"269"},{"ruleId":"262","severity":1,"message":"270","line":6,"column":8,"nodeType":"264","messageId":"265","endLine":6,"endColumn":19},{"ruleId":"267","severity":1,"message":"271","line":18,"column":6,"nodeType":"272","endLine":18,"endColumn":8,"suggestions":"273"},{"ruleId":"262","severity":1,"message":"274","line":2,"column":10,"nodeType":"264","messageId":"265","endLine":2,"endColumn":14},{"ruleId":"262","severity":1,"message":"275","line":16,"column":13,"nodeType":"264","messageId":"265","endLine":16,"endColumn":21},{"ruleId":"267","severity":1,"message":"276","line":21,"column":8,"nodeType":"272","endLine":21,"endColumn":10,"suggestions":"277"},{"ruleId":"262","severity":1,"message":"278","line":38,"column":11,"nodeType":"264","messageId":"265","endLine":38,"endColumn":32},{"ruleId":"262","severity":1,"message":"279","line":7,"column":8,"nodeType":"264","messageId":"265","endLine":7,"endColumn":21},{"ruleId":"262","severity":1,"message":"280","line":14,"column":19,"nodeType":"264","messageId":"265","endLine":14,"endColumn":27},{"ruleId":"267","severity":1,"message":"281","line":25,"column":6,"nodeType":"272","endLine":25,"endColumn":16,"suggestions":"282"},{"ruleId":"262","severity":1,"message":"283","line":1,"column":38,"nodeType":"264","messageId":"265","endLine":1,"endColumn":48},{"ruleId":"267","severity":1,"message":"281","line":81,"column":6,"nodeType":"272","endLine":81,"endColumn":16,"suggestions":"284"},{"ruleId":"262","severity":1,"message":"285","line":4,"column":8,"nodeType":"264","messageId":"265","endLine":4,"endColumn":12},{"ruleId":"262","severity":1,"message":"286","line":14,"column":10,"nodeType":"264","messageId":"265","endLine":14,"endColumn":18},{"ruleId":"262","severity":1,"message":"287","line":3,"column":9,"nodeType":"264","messageId":"265","endLine":3,"endColumn":18},{"ruleId":"288","severity":1,"message":"289","line":28,"column":45,"nodeType":"290","endLine":28,"endColumn":57},{"ruleId":"288","severity":1,"message":"289","line":29,"column":45,"nodeType":"290","endLine":29,"endColumn":57},{"ruleId":"288","severity":1,"message":"289","line":30,"column":45,"nodeType":"290","endLine":30,"endColumn":57},{"ruleId":"288","severity":1,"message":"289","line":31,"column":45,"nodeType":"290","endLine":31,"endColumn":57},{"ruleId":"288","severity":1,"message":"289","line":32,"column":45,"nodeType":"290","endLine":32,"endColumn":57},{"ruleId":"288","severity":1,"message":"289","line":43,"column":29,"nodeType":"290","endLine":43,"endColumn":41},{"ruleId":"288","severity":1,"message":"289","line":44,"column":29,"nodeType":"290","endLine":44,"endColumn":41},{"ruleId":"288","severity":1,"message":"289","line":45,"column":29,"nodeType":"290","endLine":45,"endColumn":41},{"ruleId":"288","severity":1,"message":"289","line":46,"column":29,"nodeType":"290","endLine":46,"endColumn":41},{"ruleId":"262","severity":1,"message":"291","line":1,"column":17,"nodeType":"264","messageId":"265","endLine":1,"endColumn":26},{"ruleId":"262","severity":1,"message":"292","line":1,"column":28,"nodeType":"264","messageId":"265","endLine":1,"endColumn":36},{"ruleId":"293","severity":1,"message":"294","line":172,"column":13,"nodeType":"264","messageId":"295","endLine":172,"endColumn":18},{"ruleId":"293","severity":1,"message":"296","line":172,"column":24,"nodeType":"264","messageId":"295","endLine":172,"endColumn":28},{"ruleId":"262","severity":1,"message":"274","line":1,"column":10,"nodeType":"264","messageId":"265","endLine":1,"endColumn":14},{"ruleId":"267","severity":1,"message":"297","line":21,"column":6,"nodeType":"272","endLine":21,"endColumn":19,"suggestions":"298"},{"ruleId":"299","severity":1,"message":"300","line":78,"column":33,"nodeType":"301","messageId":"302","endLine":78,"endColumn":35},{"ruleId":"299","severity":1,"message":"300","line":78,"column":68,"nodeType":"301","messageId":"302","endLine":78,"endColumn":70},{"ruleId":"299","severity":1,"message":"303","line":87,"column":26,"nodeType":"301","messageId":"302","endLine":87,"endColumn":28},{"ruleId":"299","severity":1,"message":"300","line":88,"column":28,"nodeType":"301","messageId":"302","endLine":88,"endColumn":30},{"ruleId":"262","severity":1,"message":"286","line":14,"column":10,"nodeType":"264","messageId":"265","endLine":14,"endColumn":18},{"ruleId":"262","severity":1,"message":"304","line":8,"column":24,"nodeType":"264","messageId":"265","endLine":8,"endColumn":39},{"ruleId":"262","severity":1,"message":"291","line":1,"column":27,"nodeType":"264","messageId":"265","endLine":1,"endColumn":36},{"ruleId":"262","severity":1,"message":"283","line":1,"column":38,"nodeType":"264","messageId":"265","endLine":1,"endColumn":48},{"ruleId":"262","severity":1,"message":"305","line":2,"column":68,"nodeType":"264","messageId":"265","endLine":2,"endColumn":84},{"ruleId":"262","severity":1,"message":"306","line":3,"column":16,"nodeType":"264","messageId":"265","endLine":3,"endColumn":26},{"ruleId":"262","severity":1,"message":"307","line":17,"column":10,"nodeType":"264","messageId":"265","endLine":17,"endColumn":22},{"ruleId":"262","severity":1,"message":"308","line":17,"column":24,"nodeType":"264","messageId":"265","endLine":17,"endColumn":39},{"ruleId":"262","severity":1,"message":"309","line":3,"column":59,"nodeType":"264","messageId":"265","endLine":3,"endColumn":75},{"ruleId":"299","severity":1,"message":"300","line":25,"column":33,"nodeType":"301","messageId":"302","endLine":25,"endColumn":35},{"ruleId":"299","severity":1,"message":"300","line":26,"column":33,"nodeType":"301","messageId":"302","endLine":26,"endColumn":35},{"ruleId":"299","severity":1,"message":"300","line":27,"column":33,"nodeType":"301","messageId":"302","endLine":27,"endColumn":35},{"ruleId":"299","severity":1,"message":"300","line":41,"column":33,"nodeType":"301","messageId":"302","endLine":41,"endColumn":35},{"ruleId":"299","severity":1,"message":"300","line":41,"column":68,"nodeType":"301","messageId":"302","endLine":41,"endColumn":70},{"ruleId":"299","severity":1,"message":"300","line":59,"column":30,"nodeType":"301","messageId":"302","endLine":59,"endColumn":32},{"ruleId":"310","severity":1,"message":"311","line":60,"column":15,"nodeType":"290","endLine":60,"endColumn":61},{"ruleId":"299","severity":1,"message":"300","line":62,"column":30,"nodeType":"301","messageId":"302","endLine":62,"endColumn":32},{"ruleId":"310","severity":1,"message":"311","line":63,"column":15,"nodeType":"290","endLine":63,"endColumn":62},{"ruleId":"262","severity":1,"message":"312","line":27,"column":16,"nodeType":"264","messageId":"265","endLine":27,"endColumn":23},{"ruleId":"262","severity":1,"message":"313","line":76,"column":11,"nodeType":"264","messageId":"265","endLine":76,"endColumn":20},{"ruleId":"314","severity":1,"message":"315","line":137,"column":1,"nodeType":"316","messageId":"317","endLine":154,"endColumn":22},{"ruleId":"262","severity":1,"message":"292","line":1,"column":17,"nodeType":"264","messageId":"265","endLine":1,"endColumn":25},{"ruleId":"262","severity":1,"message":"291","line":1,"column":27,"nodeType":"264","messageId":"265","endLine":1,"endColumn":36},{"ruleId":"262","severity":1,"message":"318","line":2,"column":10,"nodeType":"264","messageId":"265","endLine":2,"endColumn":20},{"ruleId":"262","severity":1,"message":"319","line":2,"column":22,"nodeType":"264","messageId":"265","endLine":2,"endColumn":28},{"ruleId":"262","severity":1,"message":"320","line":2,"column":30,"nodeType":"264","messageId":"265","endLine":2,"endColumn":38},{"ruleId":"262","severity":1,"message":"321","line":3,"column":19,"nodeType":"264","messageId":"265","endLine":3,"endColumn":31},{"ruleId":"314","severity":1,"message":"315","line":55,"column":1,"nodeType":"316","messageId":"317","endLine":102,"endColumn":25},{"ruleId":"262","severity":1,"message":"322","line":3,"column":10,"nodeType":"264","messageId":"265","endLine":3,"endColumn":21},{"ruleId":"262","severity":1,"message":"323","line":4,"column":9,"nodeType":"264","messageId":"265","endLine":4,"endColumn":21},{"ruleId":"314","severity":1,"message":"315","line":38,"column":1,"nodeType":"316","messageId":"317","endLine":51,"endColumn":16},{"ruleId":"324","severity":1,"message":"325","line":1,"column":1,"nodeType":"326","endLine":98,"endColumn":4},"no-native-reassign",["327"],"no-negated-in-lhs",["328"],"no-unused-vars","'us' is defined but never used.","Identifier","unusedVar","'set' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setAdmin'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [userInfo] as a second argument to the useEffect Hook.",["329"],"'ImageSlider' is defined but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["330"],"'Link' is defined but never used.","'userInfo' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'props.match.params.id'. Either include them or remove the dependency array.",["331"],"'handleAddToCartSignIn' is assigned a value but never used.","'AfterRegister' is defined but never used.","'setAdmin' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.history'. Either include it or remove the dependency array.",["332"],"'useContext' is defined but never used.",["333"],"'logo' is defined but never used.","'isLogout' is assigned a value but never used.","'Container' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'useEffect' is defined but never used.","'useState' is defined but never used.","no-redeclare","'total' is already defined.","redeclared","'tqty' is already defined.","React Hook useEffect has a missing dependency: 'props.match.params.id'. Either include it or remove the dependency array.",["334"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","'setStatusChange' is assigned a value but never used.","'CircularProgress' is defined but never used.","'useHistory' is defined but never used.","'shippingData' is assigned a value but never used.","'setShippingData' is assigned a value but never used.","'CART_UPDATE_ITEM' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'setName' is assigned a value but never used.","'orderData' is assigned a value but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'InputLabel' is defined but never used.","'Select' is defined but never used.","'MenuItem' is defined but never used.","'FormProvider' is defined but never used.","'useDispatch' is defined but never used.","'getCartItems' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"335","fix":"336"},{"desc":"337","fix":"338"},{"desc":"339","fix":"340"},{"desc":"341","fix":"342"},{"desc":"341","fix":"343"},{"desc":"344","fix":"345"},"Add dependencies array: [userInfo]",{"range":"346","text":"347"},"Update the dependencies array to be: [dispatch]",{"range":"348","text":"349"},"Update the dependencies array to be: [dispatch, props.match.params.id]",{"range":"350","text":"351"},"Update the dependencies array to be: [props.history, userInfo]",{"range":"352","text":"353"},{"range":"354","text":"353"},"Update the dependencies array to be: [props.match.params.id, renderCause]",{"range":"355","text":"356"},[1017,1017],", [userInfo]",[630,632],"[dispatch]",[974,976],"[dispatch, props.match.params.id]",[1073,1083],"[props.history, userInfo]",[2846,2856],[785,798],"[props.match.params.id, renderCause]"]